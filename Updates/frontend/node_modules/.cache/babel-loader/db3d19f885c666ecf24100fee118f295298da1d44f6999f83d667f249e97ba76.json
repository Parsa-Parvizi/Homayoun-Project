{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { initFlowbite } from 'flowbite';\nimport Card from './Card';\nimport Alert from \"@/components/Alert.vue\";\nimport modal from \"@/components/Modal.vue\";\nimport Input from \"@/components/custom/Input.vue\";\nimport ModalButton from \"@/components/custom/ModalButton.vue\";\nexport default {\n  name: \"addCustomer\",\n  components: {\n    ModalButton,\n    Input,\n    modal,\n    Alert,\n    Card\n  },\n  mounted() {\n    initFlowbite();\n  },\n  data() {\n    return {\n      forms: {\n        customer_name: {\n          type: 'input',\n          name: 'اسم مشتری (مثال: مهدی حسینی  یا شرکت مشتری)',\n          title: 'اسم مشتری (مثال: مهدی حسینی  یا شرکت مشتری)',\n          data: '',\n          value: '',\n          lable: 'text'\n        },\n        address: {\n          type: 'input',\n          name: 'آدرس',\n          title: 'آدرس',\n          data: '',\n          value: '',\n          lable: 'text'\n        },\n        phone: {\n          type: 'input',\n          name: 'شماره همراه',\n          title: 'شماره همراه',\n          data: '',\n          value: '',\n          lable: 'phone'\n        },\n        comment: {\n          type: 'input',\n          name: 'توضیحات',\n          title: 'توضیحات',\n          data: '',\n          value: '',\n          lable: 'comment'\n        },\n        username: {\n          type: 'input',\n          name: 'نام کاربر',\n          title: 'نام کاربر',\n          data: '',\n          value: '',\n          lable: 'text'\n        }\n      },\n      success: false,\n      error: false,\n      errors: []\n    };\n  },\n  watch: {\n    success(c, p) {\n      if (c == true) {\n        setTimeout(() => {\n          this.success = false;\n          location.reload();\n        }, 5000);\n      }\n    }\n  },\n  methods: {\n    async addCustomer() {\n      const params = {\n        \"customer_name\": this.forms.customer_name.value,\n        \"address\": this.forms.address.value,\n        \"phone\": this.forms.phone.value,\n        \"username\": this.forms.username.value,\n        \"comments\": this.forms.comment.value\n      };\n      this.errors = [];\n      for (const key in this.forms) {\n        if (this.forms[key].value == '') {\n          if (key != 'comment') {\n            this.forms[key].error = true;\n            this.errors.push({\n              'message': `${this.forms[key].name} مورد نیاز است`\n            });\n          }\n        } else {\n          this.forms[key].error = false;\n        }\n      }\n      if (this.errors.length == 0) {\n        this.error = false;\n        const response = await this.axios.post('/myapp/addCustomer/', {}, {\n          params: params\n        });\n        console.log(response.data); // Access response data\n        if (response.data['status'] == 'success') {\n          this.success = true;\n        } else {\n          this.error = true;\n          this.errors = response.data['errors'];\n        }\n      } else {\n        this.error = true;\n      }\n    }\n  }\n};","map":{"version":3,"names":["initFlowbite","Card","Alert","modal","Input","ModalButton","name","components","mounted","data","forms","customer_name","type","title","value","lable","address","phone","comment","username","success","error","errors","watch","c","p","setTimeout","location","reload","methods","addCustomer","params","key","push","length","response","axios","post","console","log"],"sources":["C:\\Users\\Amir\\ISMv988\\ISMv900\\frontend\\src\\components\\addCustomer.vue"],"sourcesContent":["<script>\r\nimport { initFlowbite } from 'flowbite'\r\nimport Card from './Card'\r\nimport Alert from \"@/components/Alert.vue\";\r\nimport modal from \"@/components/Modal.vue\";\r\nimport Input from \"@/components/custom/Input.vue\";\r\nimport ModalButton from \"@/components/custom/ModalButton.vue\";\r\n\r\nexport default {\r\n  name: \"addCustomer\",\r\n  components: {\r\n    ModalButton,\r\n    Input,\r\n    modal, Alert,\r\n    Card\r\n  },\r\n  mounted() {\r\n    initFlowbite();\r\n  },\r\n  data(){\r\n    return{\r\n      forms: {\r\n        customer_name: {type: 'input', name: 'اسم مشتری (مثال: مهدی حسینی  یا شرکت مشتری)',title: 'اسم مشتری (مثال: مهدی حسینی  یا شرکت مشتری)', data: '', value: '', lable:'text'},\r\n        address: {type: 'input', name: 'آدرس',title: 'آدرس', data: '', value: '', lable:'text'},\r\n        phone: {type: 'input', name: 'شماره همراه',title: 'شماره همراه', data: '', value: '', lable:'phone'},\r\n        comment: {type: 'input', name: 'توضیحات',title: 'توضیحات', data: '', value: '', lable:'comment'},\r\n        username: {type: 'input', name: 'نام کاربر',title: 'نام کاربر', data: '', value: '', lable:'text'},\r\n      },\r\n      success: false,\r\n      error: false,\r\n      errors: [],\r\n    }\r\n  },\r\n  watch:{\r\n    success(c, p){\r\n      if (c == true) {\r\n        setTimeout(() => {\r\n          this.success = false\r\n          location.reload();\r\n        }, 5000)\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    async addCustomer() {\r\n      const params = {\r\n        \"customer_name\": this.forms.customer_name.value,\r\n        \"address\": this.forms.address.value,\r\n        \"phone\": this.forms.phone.value,\r\n        \"username\": this.forms.username.value,\r\n        \"comments\": this.forms.comment.value,\r\n      };\r\n      this.errors = []\r\n      for (const key in this.forms) {\r\n        if (this.forms[key].value == ''){\r\n          if (key!='comment'){\r\n            this.forms[key].error = true\r\n            this.errors.push({'message': `${this.forms[key].name} مورد نیاز است`})\r\n          }\r\n        }else {\r\n           this.forms[key].error = false\r\n        }\r\n      }\r\n      if (this.errors.length == 0){\r\n        this.error = false\r\n        const response = await this.axios.post('/myapp/addCustomer/', {}, {params: params})\r\n        console.log(response.data); // Access response data\r\n        if (response.data['status'] == 'success'){\r\n          this.success = true\r\n        }else {\r\n          this.error = true\r\n          this.errors = response.data['errors']\r\n        }\r\n      } else {\r\n        this.error = true\r\n      }\r\n    }\r\n  },\r\n}\r\n</script>\r\n<template>\r\n  <Card title=\"اضافه کردن مشتری جدید\">\r\n    <form class=\"flex flex-col items-center mt-5 gap-4\">\r\n      <div v-if=\"error\" class=\"flex p-4 mb-4 text-sm text-red-800 rounded-lg bg-red-50 dark:bg-gray-800 dark:text-red-400\" role=\"alert\">\r\n            <svg class=\"flex-shrink-0 inline w-4 h-4 me-3 mt-[2px]\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n              <path d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z\"/>\r\n            </svg>\r\n            <span class=\"sr-only\">Danger</span>\r\n            <div>\r\n              <span class=\"font-medium\">خطا! لطفا اطلاعات را برسی کنید:</span>\r\n                <ul class=\"mt-1.5 list-disc list-inside\">\r\n                  <li v-for=\"error in errors\">{{ error.message }}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n      <div v-if=\"success\" class=\"flex p-4 mb-4 text-sm text-green-800 rounded-lg bg-green-50 dark:bg-gray-800 dark:text-green-400\" role=\"alert\">\r\n        <svg class=\"flex-shrink-0 inline w-4 h-4 me-3 mt-[2px]\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n          <path d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z\"/>\r\n        </svg>\r\n        <div>\r\n          <span class=\"font-medium\">\r\n            مشتری جدید با نام {{ forms.customer_name.value }} با موفقیت به سیستم اضافه شد.\r\n            <template v-for=\"(val, key) in forms\">\r\n                <p v-if=\"key=='reel_numbers'\">شماره رول:</p>\r\n                <ul v-if=\"key=='reel_numbers'\">\r\n                  <li v-for=\"item in val.value\" :key=\"item\">{{ item }}</li>\r\n                </ul>\r\n                <p v-else>{{val.title}}: {{val.value}}</p>\r\n            </template>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <template v-for=\"(val, form_name) in forms\">\r\n        <template v-if=\"val.type=='input'\">\r\n          <Input\r\n            :formName=\"form_name\"\r\n            :label=\"val.name\"\r\n            :type=\"val.lable\"\r\n            :disabled=\"val.disabled\"\r\n            @update=\"val.value = $event\"\r\n            @InputError=\"error = $event\"\r\n          />\r\n        </template>\r\n\r\n      </template>\r\n      <modal type=\"confirm\" :disabled=\"error\">\r\n        <template v-slot:button>اضافه کردن</template>\r\n        <template v-slot:text>\r\n          <div class=\"flex flex-col gap-2 font-bold\">\r\n            <template v-for=\"(val, key) in forms\">\r\n                <p v-if=\"key=='reel_numbers'\">شماره رول:</p>\r\n                <ul v-if=\"key=='reel_numbers'\">\r\n                  <li v-for=\"item in val.value\" :key=\"item\">{{ item }}</li>\r\n                </ul>\r\n                <p v-else>{{val.title}}: {{val.value}}</p>\r\n            </template>\r\n          </div>\r\n        </template>\r\n        <template v-slot:btns>\r\n          <div>\r\n            <ModalButton @close=\"addCustomer\" />\r\n          </div>\r\n        </template>\r\n      </modal>\r\n    </form>\r\n  </Card>\r\n</template>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}