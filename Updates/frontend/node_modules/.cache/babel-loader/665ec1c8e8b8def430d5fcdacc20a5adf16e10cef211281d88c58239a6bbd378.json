{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { initFlowbite } from 'flowbite';\nimport Card from '@/components/Card';\nimport modal from \"@/components/Modal.vue\";\nimport Alert from \"@/components/Alert.vue\";\nimport Lic_numer from \"@/components/lic_numer.vue\";\nimport { jsPDF } from \"jspdf\";\nimport html2canvas from 'html2canvas';\nexport default {\n  name: \"reportPage\",\n  components: {\n    Lic_numer,\n    Card,\n    modal,\n    Alert\n  },\n  data() {\n    return {\n      forms: {\n        shipments: {\n          type: 'input',\n          title: 'لیست بارنامه',\n          filter: 'فیلتر',\n          data: '',\n          value: '',\n          fields: [],\n          CopyData: [],\n          searchQuery: ''\n        },\n        sales: {\n          type: 'input',\n          title: 'لیست فروش',\n          filter: 'فیلتر',\n          data: '',\n          value: '',\n          fields: [],\n          CopyData: [],\n          searchQuery: ''\n        },\n        purchases: {\n          type: 'input',\n          title: 'لیست خرید',\n          filter: 'فیلتر',\n          data: '',\n          value: '',\n          fields: [],\n          CopyData: [],\n          searchQuery: ''\n        },\n        rawMaterial: {\n          type: 'input',\n          title: 'لیست مواد اولیه',\n          filter: 'فیلتر',\n          data: '',\n          value: '',\n          fields: [],\n          CopyData: [],\n          searchQuery: ''\n        },\n        products: {\n          type: 'input',\n          title: 'لیست محصولات',\n          filter: 'فیلتر',\n          data: '',\n          value: '',\n          fields: [],\n          CopyData: [],\n          searchQuery: ''\n        },\n        consumption: {\n          type: 'input',\n          title: 'لیست مصرف',\n          filter: 'فیلتر',\n          data: '',\n          value: '',\n          fields: [],\n          CopyData: [],\n          searchQuery: ''\n        },\n        alerts: {\n          type: 'input',\n          title: 'هشدار ها',\n          filter: 'فیلتر',\n          data: [],\n          value: '',\n          fields: ['date', 'status', 'message'],\n          CopyData: [],\n          searchQuery: ''\n        }\n      },\n      filters: [{\n        lable: 'یک سال اخیر',\n        value: 'year'\n      }, {\n        lable: 'یک ماه اخیر',\n        value: 'month'\n      }, {\n        lable: 'هفته اخیر',\n        value: 'week'\n      }, {\n        lable: 'امروز',\n        value: 'day'\n      }],\n      success: false,\n      error: false,\n      errors: [],\n      // Initialize the countdown to 15 minutes (15 * 60 seconds)\n      totalSeconds: 5 * 60,\n      alerts: [],\n      // Reactive property to store messages\n      alertSocket: null,\n      // WebSocket connection\n      searchQuery: ''\n    };\n  },\n  computed: {\n    // Format the time for display\n    formattedTime() {\n      const minutes = Math.floor(this.totalSeconds / 60);\n      const seconds = this.totalSeconds % 60;\n      return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n    }\n  },\n  mounted() {\n    initFlowbite();\n    // this.load_data()\n    this.startCountdown();\n    this.report_shipment('year');\n    this.report_Products('year');\n    this.report_Sales('year');\n    this.report_Purchases('year');\n    this.report_Consumption('year');\n    this.report_RawMaterial('year');\n    this.report_alerts('year');\n    // Initialize WebSocket connection\n    this.alertSocket = new WebSocket('ws://' + window.location.host + '/ws/alert/');\n\n    // Set up message handler\n    this.alertSocket.onmessage = e => {\n      const data = JSON.parse(e.data);\n      console.log(this.forms.alerts.data);\n      console.log(data.data);\n      this.alerts.push({\n        message: data.message\n      });\n      this.update_alert(data.data);\n    };\n\n    // Handle WebSocket errors\n    this.alertSocket.onerror = error => {\n      console.error('WebSocket Error: ', error);\n    };\n  },\n  beforeDestroy() {\n    // Close WebSocket connection when component is destroyed\n    if (this.alertSocket) {\n      this.alertSocket.close();\n    }\n  },\n  methods: {\n    update_alert(d) {\n      this.forms.alerts.data.unshift(d);\n    },\n    async generate_excel_report(model_name) {\n      console.log(model_name);\n      const params = {\n        'model_name': model_name\n      };\n      const response = await this.axios.post('/myapp/api/generateExcelReport', {}, {\n        params: params,\n        responseType: 'blob'\n      });\n      // Create a URL for the blob\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n\n      // Suggest a filename for the downloaded file\n      const filename = response.headers['content-disposition'];\n      link.setAttribute('download', filename);\n\n      // Append the link to the body\n      document.body.appendChild(link);\n\n      // Simulate click to download the file\n      link.click();\n\n      // Remove the link from the body\n      document.body.removeChild(link);\n      console.log(response.data);\n    },\n    reload() {\n      window.location.reload();\n    },\n    countdown() {\n      if (this.totalSeconds > 0) {\n        // Decrement the total seconds by one\n        this.totalSeconds -= 1;\n      } else {\n        // If the countdown has finished, refresh the page\n        window.location.reload();\n      }\n    },\n    startCountdown() {\n      // Call the countdown function every second\n      this.interval = setInterval(this.countdown, 1000);\n    },\n    select(obj) {\n      this.forms.shipment_list.value = obj;\n    },\n    clicked(k, data) {\n      if (k == 'shipments') {\n        this.forms.shipments.filter = data.lable;\n        this.report_shipment(data.value);\n      }\n      if (k == 'sales') {\n        this.forms.sales.filter = data.lable;\n        this.report_Sales(data.value);\n      }\n      if (k == 'purchases') {\n        this.forms.purchases.filter = data.lable;\n        this.report_Purchases(data.value);\n      }\n      if (k == 'rawMaterial') {\n        this.forms.rawMaterial.filter = data.lable;\n        this.report_RawMaterial(data.value);\n      }\n      if (k == 'products') {\n        this.forms.products.filter = data.lable;\n        this.report_Products(data.value);\n      }\n      if (k == 'consumption') {\n        this.forms.consumption.filter = data.lable;\n        this.report_Consumption(data.value);\n      }\n      if (k == 'alerts') {\n        this.forms.alerts.filter = data.lable;\n        this.report_alerts(data.value);\n      }\n    },\n    async load_data() {\n      const response = await this.axios.get('/myapp/api/loadReportData');\n      console.log(response.data['data']); // Access response data\n      // console.log(JSON.parse(response.data['isExists'])); // Access response data\n      this.forms = response.data['data'];\n      // this.forms.shipment_list.data = response.data['data'].shipments.values\n      // this.forms.shipment_list.fields = response.data['data'].shipments.fields\n      // console.log(JSON.parse(response.data['shipment_list']))\n    },\n    printTable(id) {\n      let table = document.getElementById(id); // Replace 'yourTableId' with your table's ID\n      console.log(table);\n      html2canvas(table).then(function (canvas) {\n        let imgData = canvas.toDataURL('image/png');\n        console.log(imgData);\n        var doc = new jsPDF('p', 'mm', 'a4');\n        var imgHeight = canvas.height * 210 / canvas.width;\n        doc.addImage(imgData, 'PNG', 0, 0, 210, imgHeight);\n        doc.save('table.pdf');\n      });\n    },\n    async report_Sales(filter) {\n      try {\n        const params = {\n          'filter': filter\n        };\n        const response = await this.axios.post('/myapp/api/reportSales', {}, {\n          params: params\n        });\n        console.log(response.data);\n        this.forms['sales'].data = response.data['values'];\n        this.forms['sales'].CopyData = response.data['values'];\n        this.forms['sales'].fields = response.data['fields'];\n      } catch (error) {\n        console.error(\"Error fetching sales report:\", error);\n        this.forms['sales'].data = [];\n        this.forms['sales'].CopyData = [];\n        // Optionally, display an error message to the user\n        // this.errorMessage = \"Failed to fetch sales report. Please try again.\";\n      }\n    },\n    async report_Purchases(filter) {\n      try {\n        const params = {\n          'filter': filter\n        };\n        const response = await this.axios.post('/myapp/api/reportPurchases', {}, {\n          params: params\n        });\n        console.log(response.data);\n        this.forms['purchases'].data = response.data['values'];\n        this.forms['purchases'].CopyData = response.data['values'];\n        this.forms['purchases'].fields = response.data['fields'];\n      } catch (error) {\n        console.error(\"Error fetching purchases report:\", error);\n        this.forms['purchases'].data = [];\n        this.forms['purchases'].CopyData = [];\n        // Optionally, display an error message to the user\n        // this.errorMessage = \"Failed to fetch purchases report. Please try again.\";\n      }\n    },\n    async report_RawMaterial(filter) {\n      try {\n        const params = {\n          'filter': filter\n        };\n        const response = await this.axios.post('/myapp/api/reportRawMaterial', {}, {\n          params: params\n        });\n        console.log(response.data);\n        this.forms['rawMaterial'].data = response.data['values'];\n        this.forms['rawMaterial'].CopyData = response.data['values'];\n        this.forms['rawMaterial'].fields = response.data['fields'];\n      } catch (error) {\n        console.error(\"Error fetching raw material report:\", error);\n        this.forms['rawMaterial'].data = [];\n        this.forms['rawMaterial'].CopyData = [];\n        // Optionally, display an error message to the user\n        // this.errorMessage = \"Failed to fetch raw material report. Please try again.\";\n      }\n    },\n    async report_Products(filter) {\n      try {\n        const params = {\n          'filter': filter\n        };\n        const response = await this.axios.post('/myapp/api/reportProducts', {}, {\n          params: params\n        });\n        console.log(response.data);\n        this.forms['products'].data = response.data['values'];\n        this.forms['products'].CopyData = response.data['values'];\n        this.forms['products'].fields = response.data['fields'];\n      } catch (error) {\n        console.error(\"Error fetching products report:\", error);\n        this.forms['products'].data = [];\n        this.forms['products'].CopyData = [];\n        // Optionally, display an error message to the user\n        // this.errorMessage = \"Failed to fetch products report. Please try again.\";\n      }\n    },\n    async report_Consumption(filter) {\n      try {\n        const params = {\n          'filter': filter\n        };\n        const response = await this.axios.post('/myapp/api/reportConsumption', {}, {\n          params: params\n        });\n        this.forms['consumption'].data = response.data['values'];\n        this.forms['consumption'].CopyData = response.data['values'];\n        this.forms['consumption'].fields = response.data['fields'];\n      } catch (error) {\n        console.error(\"Error fetching consumption report:\", error);\n        this.forms['consumption'].data = [];\n        this.forms['consumption'].CopyData = [];\n        // Optionally, display an error message to the user\n        // this.errorMessage = \"Failed to fetch consumption report. Please try again.\";\n      }\n    },\n    async report_shipment(filter) {\n      try {\n        const params = {\n          'filter': filter\n        };\n        const response = await this.axios.post('/myapp/api/reportShipment', {}, {\n          params: params\n        });\n        this.forms['shipments'].data = response.data['values'];\n        this.forms['shipments'].CopyData = response.data['values'];\n        this.forms['shipments'].fields = response.data['fields'];\n      } catch (error) {\n        console.error(\"Error fetching shipment report:\", error);\n        this.forms['shipments'].data = [];\n        this.forms['shipments'].CopyData = [];\n        // Optionally, display an error message to the user\n        // this.errorMessage = \"Failed to fetch shipment report. Please try again.\";\n      }\n    },\n    async report_alerts(filter) {\n      try {\n        const params = {\n          'filter': filter\n        };\n        const response = await this.axios.post('/myapp/api/reportAlert', {}, {\n          params: params\n        });\n        console.log(response.data);\n        this.forms['alerts'].data = response.data['values'];\n        this.forms['alerts'].CopyData = response.data['values'];\n        this.forms['alerts'].fields = response.data['fields'];\n        console.log(this.forms.alerts);\n      } catch (error) {\n        console.error(\"Error fetching alerts report:\", error);\n        this.forms['alerts'].data = [];\n        this.forms['alerts'].CopyData = [];\n      }\n    },\n    sortTable(tableName, column) {\n      this.forms[tableName].data.sort((a, b) => {\n        // Check if the column data is a number\n        if (!isNaN(a[column]) && !isNaN(b[column])) {\n          return a[column] - b[column];\n        }\n        // Check if the column data is a string\n        if (typeof a[column] === 'string' && typeof b[column] === 'string') {\n          // Convert both strings to lowercase for case-insensitive comparison\n          const aLower = a[column].toLowerCase();\n          const bLower = b[column].toLowerCase();\n          if (aLower < bLower) {\n            return -1;\n          }\n          if (aLower > bLower) {\n            return 1;\n          }\n          return 0;\n        }\n        // If the data is neither a number nor a string, sort alphabetically\n        if (a[column] < b[column]) {\n          return -1;\n        }\n        if (a[column] > b[column]) {\n          return 1;\n        }\n        return 0;\n      });\n    },\n    reverseTable(tableName, column) {\n      // Reverse the order of the data in the specified column using.reverse()\n      this.forms[tableName].data = this.forms[tableName].data.map(row => {\n        const reversedRow = {};\n        for (const key in row) {\n          reversedRow[key] = row[key];\n        }\n        reversedRow[column] = row[column].reverse();\n        return reversedRow;\n      });\n    },\n    filterTable(tableName) {\n      if (this.forms[tableName].searchQuery) {\n        // this.forms[tableName].CopyData = this.forms[tableName].data\n        this.forms[tableName].data = this.forms[tableName].data.filter(item => {\n          return Object.values(item).some(value => value !== null && value !== undefined && value.toString().toLowerCase().includes(this.forms[tableName].searchQuery.toLowerCase()));\n        });\n      } else {\n        this.forms[tableName].data = this.forms[tableName].CopyData;\n      }\n    }\n  }\n};","map":{"version":3,"names":["initFlowbite","Card","modal","Alert","Lic_numer","jsPDF","html2canvas","name","components","data","forms","shipments","type","title","filter","value","fields","CopyData","searchQuery","sales","purchases","rawMaterial","products","consumption","alerts","filters","lable","success","error","errors","totalSeconds","alertSocket","computed","formattedTime","minutes","Math","floor","seconds","toString","padStart","mounted","startCountdown","report_shipment","report_Products","report_Sales","report_Purchases","report_Consumption","report_RawMaterial","report_alerts","WebSocket","window","location","host","onmessage","e","JSON","parse","console","log","push","message","update_alert","onerror","beforeDestroy","close","methods","d","unshift","generate_excel_report","model_name","params","response","axios","post","responseType","url","URL","createObjectURL","Blob","link","document","createElement","href","filename","headers","setAttribute","body","appendChild","click","removeChild","reload","countdown","interval","setInterval","select","obj","shipment_list","clicked","k","load_data","get","printTable","id","table","getElementById","then","canvas","imgData","toDataURL","doc","imgHeight","height","width","addImage","save","sortTable","tableName","column","sort","a","b","isNaN","aLower","toLowerCase","bLower","reverseTable","map","row","reversedRow","key","reverse","filterTable","item","Object","values","some","undefined","includes"],"sources":["C:\\Users\\Amir\\ISMv988\\ISMv900\\frontend\\src\\components\\admin\\reportPage.vue"],"sourcesContent":["<script>\r\nimport {initFlowbite} from 'flowbite'\r\nimport Card from '@/components/Card'\r\nimport modal from \"@/components/Modal.vue\";\r\nimport Alert from \"@/components/Alert.vue\";\r\nimport Lic_numer from \"@/components/lic_numer.vue\";\r\nimport {jsPDF} from \"jspdf\";\r\nimport html2canvas from 'html2canvas';\r\n\r\nexport default {\r\n  name: \"reportPage\",\r\n  components: {\r\n    Lic_numer,\r\n    Card,\r\n    modal,\r\n    Alert\r\n  },\r\n  data() {\r\n    return {\r\n      forms: {\r\n        shipments: {\r\n          type: 'input',\r\n          title: 'لیست بارنامه',\r\n          filter: 'فیلتر',\r\n          data: '',\r\n          value: '',\r\n          fields: [],\r\n          CopyData: [],\r\n          searchQuery: ''\r\n        },\r\n        sales: {\r\n          type: 'input',\r\n          title: 'لیست فروش',\r\n          filter: 'فیلتر',\r\n          data: '',\r\n          value: '',\r\n          fields: [],\r\n          CopyData: [],\r\n          searchQuery: ''\r\n        },\r\n        purchases: {\r\n          type: 'input',\r\n          title: 'لیست خرید',\r\n          filter: 'فیلتر',\r\n          data: '',\r\n          value: '',\r\n          fields: [],\r\n          CopyData: [],\r\n          searchQuery: ''\r\n        },\r\n        rawMaterial: {\r\n          type: 'input',\r\n          title: 'لیست مواد اولیه',\r\n          filter: 'فیلتر',\r\n          data: '',\r\n          value: '',\r\n          fields: [],\r\n          CopyData: [],\r\n          searchQuery: ''\r\n        },\r\n        products: {\r\n          type: 'input',\r\n          title: 'لیست محصولات',\r\n          filter: 'فیلتر',\r\n          data: '',\r\n          value: '',\r\n          fields: [],\r\n          CopyData: [],\r\n          searchQuery: ''\r\n        },\r\n        consumption: {\r\n          type: 'input',\r\n          title: 'لیست مصرف',\r\n          filter: 'فیلتر',\r\n          data: '',\r\n          value: '',\r\n          fields: [],\r\n          CopyData: [],\r\n          searchQuery: ''\r\n        },\r\n        alerts: {\r\n          type: 'input',\r\n          title: 'هشدار ها',\r\n          filter: 'فیلتر',\r\n          data: [],\r\n          value: '',\r\n          fields: ['date', 'status', 'message'],\r\n          CopyData: [],\r\n          searchQuery: ''\r\n        },\r\n      },\r\n      filters: [\r\n        {lable: 'یک سال اخیر', value: 'year'},\r\n        {lable: 'یک ماه اخیر', value: 'month'},\r\n        {lable: 'هفته اخیر', value: 'week'},\r\n        {lable: 'امروز', value: 'day'},\r\n      ],\r\n      success: false,\r\n      error: false,\r\n      errors: [],\r\n\r\n      // Initialize the countdown to 15 minutes (15 * 60 seconds)\r\n      totalSeconds: 5 * 60,\r\n      alerts: [], // Reactive property to store messages\r\n      alertSocket: null, // WebSocket connection\r\n      searchQuery: '',\r\n    }\r\n  },\r\n  computed: {\r\n    // Format the time for display\r\n    formattedTime() {\r\n      const minutes = Math.floor(this.totalSeconds / 60);\r\n      const seconds = this.totalSeconds % 60;\r\n      return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n    }\r\n  },\r\n  mounted() {\r\n    initFlowbite();\r\n    // this.load_data()\r\n    this.startCountdown();\r\n    this.report_shipment('year')\r\n    this.report_Products('year')\r\n    this.report_Sales('year')\r\n    this.report_Purchases('year')\r\n    this.report_Consumption('year')\r\n    this.report_RawMaterial('year')\r\n    this.report_alerts('year')\r\n    // Initialize WebSocket connection\r\n    this.alertSocket = new WebSocket('ws://' + window.location.host + '/ws/alert/');\r\n\r\n    // Set up message handler\r\n    this.alertSocket.onmessage = (e) => {\r\n      const data = JSON.parse(e.data);\r\n      console.log(this.forms.alerts.data);\r\n      console.log(data.data);\r\n      this.alerts.push({message: data.message});\r\n      this.update_alert(data.data)\r\n    };\r\n\r\n    // Handle WebSocket errors\r\n    this.alertSocket.onerror = (error) => {\r\n      console.error('WebSocket Error: ', error);\r\n    };\r\n\r\n  },\r\n  beforeDestroy() {\r\n    // Close WebSocket connection when component is destroyed\r\n    if (this.alertSocket) {\r\n      this.alertSocket.close();\r\n    }\r\n  },\r\n  methods: {\r\n    update_alert(d) {\r\n      this.forms.alerts.data.unshift(d);\r\n    },\r\n    async generate_excel_report(model_name) {\r\n      console.log(model_name)\r\n      const params = {\r\n        'model_name': model_name,\r\n      }\r\n      const response = await this.axios.post('/myapp/api/generateExcelReport', {}, {\r\n        params: params,\r\n        responseType: 'blob',\r\n      },)\r\n      // Create a URL for the blob\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n\r\n      // Suggest a filename for the downloaded file\r\n      const filename = response.headers['content-disposition'];\r\n      link.setAttribute('download', filename);\r\n\r\n      // Append the link to the body\r\n      document.body.appendChild(link);\r\n\r\n      // Simulate click to download the file\r\n      link.click();\r\n\r\n      // Remove the link from the body\r\n      document.body.removeChild(link);\r\n\r\n      console.log(response.data)\r\n    },\r\n    reload() {\r\n      window.location.reload();\r\n    },\r\n    countdown() {\r\n      if (this.totalSeconds > 0) {\r\n        // Decrement the total seconds by one\r\n        this.totalSeconds -= 1;\r\n      } else {\r\n        // If the countdown has finished, refresh the page\r\n        window.location.reload();\r\n      }\r\n    },\r\n    startCountdown() {\r\n      // Call the countdown function every second\r\n      this.interval = setInterval(this.countdown, 1000);\r\n    },\r\n    select(obj) {\r\n      this.forms.shipment_list.value = obj\r\n    },\r\n    clicked(k, data) {\r\n      if (k == 'shipments') {\r\n        this.forms.shipments.filter = data.lable\r\n        this.report_shipment(data.value)\r\n      }\r\n      if (k == 'sales') {\r\n        this.forms.sales.filter = data.lable\r\n        this.report_Sales(data.value)\r\n      }\r\n      if (k == 'purchases') {\r\n        this.forms.purchases.filter = data.lable\r\n        this.report_Purchases(data.value)\r\n      }\r\n      if (k == 'rawMaterial') {\r\n        this.forms.rawMaterial.filter = data.lable\r\n        this.report_RawMaterial(data.value)\r\n      }\r\n      if (k == 'products') {\r\n        this.forms.products.filter = data.lable\r\n        this.report_Products(data.value)\r\n      }\r\n      if (k == 'consumption') {\r\n        this.forms.consumption.filter = data.lable\r\n        this.report_Consumption(data.value)\r\n      }\r\n      if (k == 'alerts') {\r\n        this.forms.alerts.filter = data.lable\r\n        this.report_alerts(data.value)\r\n      }\r\n    },\r\n    async load_data() {\r\n      const response = await this.axios.get('/myapp/api/loadReportData')\r\n      console.log(response.data['data']); // Access response data\r\n      // console.log(JSON.parse(response.data['isExists'])); // Access response data\r\n      this.forms = response.data['data']\r\n      // this.forms.shipment_list.data = response.data['data'].shipments.values\r\n      // this.forms.shipment_list.fields = response.data['data'].shipments.fields\r\n      // console.log(JSON.parse(response.data['shipment_list']))\r\n    },\r\n    printTable(id) {\r\n      let table = document.getElementById(id); // Replace 'yourTableId' with your table's ID\r\n      console.log(table)\r\n      html2canvas(table).then(function (canvas) {\r\n        let imgData = canvas.toDataURL('image/png');\r\n        console.log(imgData)\r\n        var doc = new jsPDF('p', 'mm', 'a4');\r\n        var imgHeight = canvas.height * 210 / canvas.width;\r\n        doc.addImage(imgData, 'PNG', 0, 0, 210, imgHeight);\r\n        doc.save('table.pdf');\r\n      });\r\n    },\r\n    async report_Sales(filter) {\r\n      try {\r\n        const params = {\r\n          'filter': filter,\r\n        }\r\n        const response = await this.axios.post('/myapp/api/reportSales', {}, {params: params})\r\n        console.log(response.data);\r\n        this.forms['sales'].data = response.data['values']\r\n        this.forms['sales'].CopyData = response.data['values']\r\n        this.forms['sales'].fields = response.data['fields']\r\n      } catch (error) {\r\n        console.error(\"Error fetching sales report:\", error);\r\n        this.forms['sales'].data = []\r\n        this.forms['sales'].CopyData = []\r\n        // Optionally, display an error message to the user\r\n        // this.errorMessage = \"Failed to fetch sales report. Please try again.\";\r\n      }\r\n    },\r\n\r\n    async report_Purchases(filter) {\r\n      try {\r\n        const params = {\r\n          'filter': filter,\r\n        }\r\n        const response = await this.axios.post('/myapp/api/reportPurchases', {}, {params: params})\r\n        console.log(response.data);\r\n        this.forms['purchases'].data = response.data['values']\r\n        this.forms['purchases'].CopyData = response.data['values']\r\n        this.forms['purchases'].fields = response.data['fields']\r\n      } catch (error) {\r\n        console.error(\"Error fetching purchases report:\", error);\r\n        this.forms['purchases'].data = []\r\n        this.forms['purchases'].CopyData = []\r\n        // Optionally, display an error message to the user\r\n        // this.errorMessage = \"Failed to fetch purchases report. Please try again.\";\r\n      }\r\n    },\r\n\r\n    async report_RawMaterial(filter) {\r\n      try {\r\n        const params = {\r\n          'filter': filter,\r\n        }\r\n        const response = await this.axios.post('/myapp/api/reportRawMaterial', {}, {params: params})\r\n        console.log(response.data);\r\n        this.forms['rawMaterial'].data = response.data['values']\r\n        this.forms['rawMaterial'].CopyData = response.data['values']\r\n        this.forms['rawMaterial'].fields = response.data['fields']\r\n      } catch (error) {\r\n        console.error(\"Error fetching raw material report:\", error);\r\n        this.forms['rawMaterial'].data = []\r\n        this.forms['rawMaterial'].CopyData = []\r\n        // Optionally, display an error message to the user\r\n        // this.errorMessage = \"Failed to fetch raw material report. Please try again.\";\r\n      }\r\n    },\r\n\r\n    async report_Products(filter) {\r\n      try {\r\n        const params = {\r\n          'filter': filter,\r\n        }\r\n        const response = await this.axios.post('/myapp/api/reportProducts', {}, {params: params})\r\n        console.log(response.data);\r\n        this.forms['products'].data = response.data['values']\r\n        this.forms['products'].CopyData = response.data['values']\r\n        this.forms['products'].fields = response.data['fields']\r\n      } catch (error) {\r\n        console.error(\"Error fetching products report:\", error);\r\n        this.forms['products'].data = []\r\n        this.forms['products'].CopyData = []\r\n        // Optionally, display an error message to the user\r\n        // this.errorMessage = \"Failed to fetch products report. Please try again.\";\r\n      }\r\n    },\r\n\r\n    async report_Consumption(filter) {\r\n      try {\r\n        const params = {\r\n          'filter': filter,\r\n        }\r\n        const response = await this.axios.post('/myapp/api/reportConsumption', {}, {params: params})\r\n        this.forms['consumption'].data = response.data['values']\r\n        this.forms['consumption'].CopyData = response.data['values']\r\n        this.forms['consumption'].fields = response.data['fields']\r\n      } catch (error) {\r\n        console.error(\"Error fetching consumption report:\", error);\r\n        this.forms['consumption'].data = []\r\n        this.forms['consumption'].CopyData = []\r\n        // Optionally, display an error message to the user\r\n        // this.errorMessage = \"Failed to fetch consumption report. Please try again.\";\r\n      }\r\n    },\r\n\r\n    async report_shipment(filter) {\r\n      try {\r\n        const params = {\r\n          'filter': filter,\r\n        }\r\n        const response = await this.axios.post('/myapp/api/reportShipment', {}, {params: params})\r\n\r\n        this.forms['shipments'].data = response.data['values']\r\n        this.forms['shipments'].CopyData = response.data['values']\r\n        this.forms['shipments'].fields = response.data['fields']\r\n\r\n      } catch (error) {\r\n        console.error(\"Error fetching shipment report:\", error);\r\n        this.forms['shipments'].data = []\r\n        this.forms['shipments'].CopyData = []\r\n        // Optionally, display an error message to the user\r\n        // this.errorMessage = \"Failed to fetch shipment report. Please try again.\";\r\n      }\r\n    },\r\n\r\n    async report_alerts(filter) {\r\n      try {\r\n        const params = {\r\n          'filter': filter,\r\n        }\r\n        const response = await this.axios.post('/myapp/api/reportAlert', {}, {params: params})\r\n        console.log(response.data);\r\n        this.forms['alerts'].data = response.data['values']\r\n        this.forms['alerts'].CopyData = response.data['values']\r\n        this.forms['alerts'].fields = response.data['fields']\r\n        console.log(this.forms.alerts)\r\n      } catch (error) {\r\n        console.error(\"Error fetching alerts report:\", error);\r\n\r\n        this.forms['alerts'].data = []\r\n        this.forms['alerts'].CopyData = []\r\n      }\r\n    },\r\n\r\n    sortTable(tableName, column) {\r\n      this.forms[tableName].data.sort((a, b) => {\r\n        // Check if the column data is a number\r\n        if (!isNaN(a[column]) && !isNaN(b[column])) {\r\n          return a[column] - b[column];\r\n        }\r\n        // Check if the column data is a string\r\n        if (typeof a[column] === 'string' && typeof b[column] === 'string') {\r\n          // Convert both strings to lowercase for case-insensitive comparison\r\n          const aLower = a[column].toLowerCase();\r\n          const bLower = b[column].toLowerCase();\r\n          if (aLower < bLower) {\r\n            return -1;\r\n          }\r\n          if (aLower > bLower) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        }\r\n        // If the data is neither a number nor a string, sort alphabetically\r\n        if (a[column] < b[column]) {\r\n          return -1;\r\n        }\r\n        if (a[column] > b[column]) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    },\r\n\r\n    reverseTable(tableName, column) {\r\n      // Reverse the order of the data in the specified column using.reverse()\r\n      this.forms[tableName].data = this.forms[tableName].data.map(row => {\r\n        const reversedRow = {};\r\n        for (const key in row) {\r\n          reversedRow[key] = row[key];\r\n        }\r\n        reversedRow[column] = row[column].reverse();\r\n        return reversedRow;\r\n      });\r\n    },\r\n\r\n    filterTable(tableName) {\r\n      if (this.forms[tableName].searchQuery) {\r\n        // this.forms[tableName].CopyData = this.forms[tableName].data\r\n        this.forms[tableName].data = this.forms[tableName].data.filter(item => {\r\n          return Object.values(item).some(value =>\r\n              value !== null && value !== undefined &&\r\n              value.toString().toLowerCase().includes(this.forms[tableName].searchQuery.toLowerCase())\r\n          );\r\n        });\r\n      } else {\r\n        this.forms[tableName].data = this.forms[tableName].CopyData\r\n      }\r\n    }\r\n\r\n  },\r\n}\r\n</script>\r\n\r\n<template>\r\n  <!--<Card title=\"گزارش\">-->\r\n  <div class=\"container relative w-screen p-5\">\r\n    <!-- The div that should appear in front of all others -->\r\n    <div class=\"fixed top-0 right-0 left-0 z-10 flex w-full flex-col\">\r\n      <template v-for=\"(alert, index) in alerts\" :key=\"index\">\r\n        <Alert :msg=\"alert.message\"></Alert>\r\n      </template>\r\n    </div>\r\n    <p class=\"flex flex-row items-center gap-2\">\r\n      <button @click=\"reload\"\r\n              class=\"block w-auto rounded-lg bg-green-500 px-5 text-center text-sm font-medium text-white py-2.5 hover:bg-green-600 focus:outline-none focus:ring-4 focus:ring-green-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n              type=\"button\">\r\n        بارگیری مجدد\r\n      </button>\r\n      {{ formattedTime }}\r\n    </p>\r\n    <form class=\"mt-5 flex flex-col items-center gap-4\">\r\n      <template v-for=\"(val, tableName) in forms\">\r\n        <div class=\"relative h-auto w-full overflow-x-auto overflow-y-scroll shadow-md max-h-[500px] sm:rounded-lg\">\r\n          <table :id=\"tableName\" class=\"w-full text-left rtl:text-right text-sm text-gray-500 dark:text-gray-400\">\r\n            <caption\r\n                class=\"bg-white p-5 text-left rtl:text-right text-lg font-semibold text-gray-900 dark:bg-gray-800 dark:text-white\">\r\n\r\n              <div class=\"flex flex-row items-center gap-2\">\r\n                <template v-if=\"tableName == 'products'\">\r\n                  <router-link\r\n                      to=\"/myapp/ProductsPage/\"\r\n                      type=\"button\"\r\n                      class=\"font-medium text-blue-600 hover:underline dark:text-blue-500\"\r\n                  >\r\n                    {{ val.title }}\r\n                  </router-link>\r\n                </template>\r\n                <template v-else>\r\n                  {{ val.title }}\r\n                </template>\r\n                <button @click=\"printTable(tableName)\"\r\n                        class=\"block w-auto rounded-lg bg-green-500 px-5 text-center text-sm font-medium text-white py-2.5 hover:bg-green-600 focus:outline-none focus:ring-4 focus:ring-green-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n                        type=\"button\">\r\n                  PDF\r\n                </button>\r\n                <button @click=\"generate_excel_report(tableName)\"\r\n                        class=\"block w-auto rounded-lg bg-green-500 px-5 text-center text-sm font-medium text-white py-2.5 hover:bg-green-600 focus:outline-none focus:ring-4 focus:ring-green-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n                        type=\"button\">\r\n                  XLS\r\n                </button>\r\n\r\n                <button :id=\"tableName + 'Button1'\" :data-dropdown-toggle=\"tableName+'dropdown1'\"\r\n                        class=\"inline-flex w-44 items-center justify-between rounded-lg bg-green-500 px-5 text-center text-sm font-medium text-white py-2.5 hover:bg-green-600 focus:outline-none focus:ring-4 focus:ring-green-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n                        type=\"button\">\r\n                  {{ val.filter }}\r\n                  <svg class=\"w-2.5 h-2.5 ms-3\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\"\r\n                       viewBox=\"0 0 10 6\">\r\n                    <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                          d=\"m1 1 4 4 4-4\"/>\r\n                  </svg>\r\n                </button>\r\n                <!-- Dropdown menu -->\r\n                <div :id=\"tableName+'dropdown1'\"\r\n                     class=\"z-50 hidden w-44 rounded-lg bg-white shadow divide-y divide-gray-100 dark:bg-gray-700\">\r\n                  <ul class=\"h-auto max-h-48 overflow-y-auto py-2 text-sm text-gray-700 dark:text-gray-200\"\r\n                      :aria-labelledby=\"tableName + 'Button1'\">\r\n                    <li v-for=\"data in filters\">\r\n                      <a @click='clicked(tableName ,data)' type=\"button\"\r\n                         class=\"block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\">\r\n                        {{ data.lable }}\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <input type=\"text\" v-model=\"forms[tableName].searchQuery\" @input=\"filterTable(tableName)\"\r\n                       class=\"block rounded-lg border border-gray-300 bg-gray-50 p-2 pl-10 text-sm text-gray-900 w-md focus:ring-primary-500 focus:border-primary-500 dark:placeholder-gray-400 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500\"\r\n                       placeholder=\"Search\" required=\"\">\r\n              </div>\r\n\r\n            </caption>\r\n            <thead class=\"bg-green-500 text-xs uppercase text-gray-100 dark:bg-gray-700 dark:text-gray-400\">\r\n            <tr>\r\n              <template v-for=\"(column ,k) in val.fields\">\r\n                <template v-if=\"column !='id'\">\r\n                  <th scope=\"col\" class=\"px-2 py-3\" @click=\"sortTable(tableName, column)\">\r\n                    {{ column }}\r\n                  </th>\r\n                </template>\r\n              </template>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <template v-for=\"(v, index) in val.data\">\r\n              <tr class=\"truncate border-b bg-white hover:bg-green-50 dark:border-gray-700 dark:bg-gray-800 dark:hover:bg-gray-600\">\r\n                <template v-for=\"(field ,k) in val.fields\">\r\n                  <template v-if=\"field !='id'\">\r\n                    <td class=\"w-4 p-4\">\r\n                      {{ v[field] }}\r\n                    </td>\r\n                  </template>\r\n                </template>\r\n              </tr>\r\n            </template>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </template>\r\n    </form>\r\n  </div>\r\n\r\n</template>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}