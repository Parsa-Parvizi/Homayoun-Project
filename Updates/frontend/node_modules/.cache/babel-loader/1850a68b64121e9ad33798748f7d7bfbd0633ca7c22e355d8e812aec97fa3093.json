{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { initFlowbite } from \"flowbite\";\nimport modal from \"@/components/Modal.vue\";\nimport Alert from \"@/components/Alert.vue\";\nimport Card from \"@/components/Card.vue\";\nimport Dropdown from \"@/components/custom/Dropdown.vue\";\nimport ModalButton from \"@/components/custom/ModalButton.vue\";\nimport Input from \"@/components/custom/Input.vue\";\nexport default {\n  name: \"weight1\",\n  components: {\n    Input,\n    ModalButton,\n    Dropdown,\n    Card,\n    Alert,\n    modal\n  },\n  data() {\n    return {\n      forms: {\n        lic_number: {\n          type: 'dropdown',\n          name: 'شماره پلاک',\n          title: 'شماره پلاک',\n          data: '',\n          value: ''\n        },\n        weight1: {\n          type: 'input',\n          name: 'وزن 1',\n          title: 'وزن 1',\n          value: '',\n          numbertype: true,\n          lable: 'number'\n        },\n        username: {\n          type: 'input',\n          name: 'نام کاربر',\n          title: 'نام کاربر',\n          value: ''\n        }\n      },\n      success: false,\n      error: false,\n      errors: []\n    };\n  },\n  computed: {\n    formattedValue() {\n      return this.formatNumber(this.inputValue);\n    }\n  },\n  watch: {\n    success(c, p) {\n      if (c == true) {\n        setTimeout(() => {\n          this.success = false;\n          location.reload();\n        }, 5000);\n      }\n    }\n  },\n  mounted() {\n    initFlowbite();\n    const params = {\n      \"status\": 'Registered',\n      \"location\": 'Entrance'\n    };\n    this.axios.post('/myapp/api/getShipmentLicenseNumbers', {}, {\n      params: params\n    }).then(response => {\n      console.log('lics:', response.data);\n      this.forms.lic_number.data = response.data['license_numbers'];\n    });\n  },\n  methods: {\n    formatNumber(value) {\n      return value.replace(/\\D/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    },\n    formatInput() {\n      this.forms.weight1.value = this.formatNumber(this.forms.weight1.value);\n    },\n    clicked(k, name) {\n      console.log(k, name);\n      if (k == 'lic_number') {\n        this.forms.lic_number.name = name;\n        this.forms.lic_number.value = name;\n      }\n    },\n    async weight1() {\n      const params = {\n        \"license_number\": this.forms.lic_number.value,\n        \"weight1\": this.forms.weight1.value.replace(/,/g, ''),\n        \"username\": this.forms.username.value\n      };\n      this.errors = [];\n      for (const key in this.forms) {\n        if (this.forms[key].value == '') {\n          if (key != 'comment') {\n            this.forms[key].error = true;\n            this.errors.push({\n              'message': `${this.forms[key].name} مورد نیاز است`\n            });\n          }\n        } else {\n          this.forms[key].error = false;\n        }\n      }\n      if (this.errors.length == 0) {\n        this.error = false;\n        const response = await this.axios.post('/myapp/updateWeight1/', {}, {\n          params: params\n        });\n        console.log(response.data); // Access response data\n        if (response.data['status'] == 'success') {\n          this.success = true;\n        } else {\n          this.error = true;\n          this.errors = response.data['errors'];\n        }\n      } else {\n        this.error = true;\n      }\n    }\n  }\n};","map":{"version":3,"names":["initFlowbite","modal","Alert","Card","Dropdown","ModalButton","Input","name","components","data","forms","lic_number","type","title","value","weight1","numbertype","lable","username","success","error","errors","computed","formattedValue","formatNumber","inputValue","watch","c","p","setTimeout","location","reload","mounted","params","axios","post","then","response","console","log","methods","replace","formatInput","clicked","k","key","push","length"],"sources":["C:\\Users\\Amir\\ISMv988\\ISMv900\\frontend\\src\\components\\weightStation\\weight1.vue"],"sourcesContent":["<script>\r\nimport {initFlowbite} from \"flowbite\";\r\nimport modal from \"@/components/Modal.vue\";\r\nimport Alert from \"@/components/Alert.vue\";\r\nimport Card from \"@/components/Card.vue\";\r\nimport Dropdown from \"@/components/custom/Dropdown.vue\";\r\nimport ModalButton from \"@/components/custom/ModalButton.vue\";\r\nimport Input from \"@/components/custom/Input.vue\";\r\n\r\nexport default {\r\n  name: \"weight1\",\r\n  components: {Input, ModalButton, Dropdown, Card, Alert, modal},\r\n  data(){\r\n    return {\r\n      forms: {\r\n        lic_number: {type: 'dropdown', name: 'شماره پلاک',title: 'شماره پلاک', data: '', value: ''},\r\n        weight1: {type:'input', name: 'وزن 1',title: 'وزن 1', value: '', numbertype:true, lable:'number'},\r\n        username: {type:'input', name: 'نام کاربر',title: 'نام کاربر', value: ''},\r\n      },\r\n      success: false,\r\n      error: false,\r\n      errors: [],\r\n    }\r\n  },\r\n  computed: {\r\n    formattedValue() {\r\n      return this.formatNumber(this.inputValue);\r\n    },\r\n  },\r\n  watch:{\r\n    success(c, p){\r\n      if (c == true) {\r\n        setTimeout(() => {\r\n          this.success = false\r\n          location.reload();\r\n        }, 5000)\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    initFlowbite();\r\n    const params = {\r\n      \"status\": 'Registered',\r\n      \"location\": 'Entrance'\r\n    }\r\n    this.axios.post('/myapp/api/getShipmentLicenseNumbers', {}, {params: params}).then((response) => {\r\n      console.log('lics:',response.data)\r\n      this.forms.lic_number.data = response.data['license_numbers']\r\n    })\r\n  },\r\n  methods:{\r\n    formatNumber(value) {\r\n      return value.replace(/\\D/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    },\r\n    formatInput() {\r\n      this.forms.weight1.value = this.formatNumber(this.forms.weight1.value);\r\n    },\r\n    clicked(k, name){\r\n      console.log(k, name)\r\n      if (k == 'lic_number'){\r\n        this.forms.lic_number.name = name\r\n        this.forms.lic_number.value = name\r\n      }\r\n    },\r\n    async weight1() {\r\n      const params = {\r\n        \"license_number\": this.forms.lic_number.value,\r\n        \"weight1\": this.forms.weight1.value.replace(/,/g, ''),\r\n        \"username\": this.forms.username.value,\r\n      };\r\n      this.errors = []\r\n      for (const key in this.forms) {\r\n        if (this.forms[key].value == ''){\r\n          if (key!='comment'){\r\n            this.forms[key].error = true\r\n          this.errors.push({'message': `${this.forms[key].name} مورد نیاز است`})\r\n          }\r\n        }else {\r\n           this.forms[key].error = false\r\n        }\r\n      }\r\n      if (this.errors.length == 0){\r\n        this.error = false\r\n        const response = await this.axios.post('/myapp/updateWeight1/', {}, {params: params})\r\n        console.log(response.data); // Access response data\r\n        if (response.data['status'] == 'success'){\r\n          this.success = true\r\n        }else {\r\n          this.error = true\r\n          this.errors = response.data['errors']\r\n        }\r\n      } else {\r\n        this.error = true\r\n      }\r\n\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n    <form class=\"flex flex-col items-center mt-5 gap-4\">\r\n      <div v-if=\"error\" class=\"flex p-4 mb-4 text-sm text-red-800 rounded-lg bg-red-50 dark:bg-gray-800 dark:text-red-400\" role=\"alert\">\r\n            <svg class=\"flex-shrink-0 inline w-4 h-4 me-3 mt-[2px]\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n              <path d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z\"/>\r\n            </svg>\r\n            <span class=\"sr-only\">Danger</span>\r\n            <div>\r\n              <span class=\"font-medium\">خطا! لطفا اطلاعات را برسی کنید:</span>\r\n                <ul class=\"mt-1.5 list-disc list-inside\">\r\n                  <li v-for=\"error in errors\">{{ error.message }}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n      <div v-if=\"success\" class=\"flex p-4 mb-4 text-sm text-green-800 rounded-lg bg-green-50 dark:bg-gray-800 dark:text-green-400\" role=\"alert\">\r\n        <svg class=\"flex-shrink-0 inline w-4 h-4 me-3 mt-[2px]\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n          <path d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z\"/>\r\n        </svg>\r\n        <div>\r\n          <span class=\"font-medium\">\r\n              شما وزن {{forms.weight1.value}} کیلوگرم را برای بارنامه مشتری/خریدار با پلاگ {{forms.lic_number.value}}در سیستم ثبت کردید.\r\n              <template v-for=\"(val, key) in forms\">\r\n                <p v-if=\"key=='reel_numbers'\">شماره رول:</p>\r\n                <ul v-if=\"key=='reel_numbers'\">\r\n                  <li v-for=\"item in val.value\" :key=\"item\">{{ item }}</li>\r\n                </ul>\r\n                <p v-else>{{val.title}}: {{val.value}}</p>\r\n               </template>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <template v-for=\"(val, form_name) in forms\">\r\n        <template v-if=\"val.type=='input'\">\r\n<!--          <div class=\"relative\">-->\r\n<!--            <template v-if=\"val.numbertype\">-->\r\n<!--              <input v-model=\"val.value\" @input=\"formatInput\" type=\"text\" :id=\"form_name\" :class=\"[val.error ? 'text-red-900 border-red-500 focus:border-red-500' : 'text-gray-900 focus:border-green-500 border-gray-300']\" class=\"block px-2.5 pb-2.5 pt-4 w-full text-sm  bg-transparent rounded-lg border-1 appearance-none focus:outline-none focus:ring-0 peer\" placeholder=\"\" />-->\r\n<!--            </template>-->\r\n<!--            <template v-else>-->\r\n<!--              <input v-model=\"val.value\" type=\"text\" :id=\"form_name\" :class=\"[val.error ? 'text-red-900 border-red-500 focus:border-red-500' : 'text-gray-900 focus:border-green-500 border-gray-300']\" class=\"block px-2.5 pb-2.5 pt-4 w-full text-sm  bg-transparent rounded-lg border-1 appearance-none focus:outline-none focus:ring-0 peer\" placeholder=\"\" />-->\r\n<!--            </template>-->\r\n<!--            <label :for=\"form_name\" :class=\"[val.error ? 'peer-focus:text-red-500 text-red-500' : 'peer-focus:text-green-500 text-gray-500']\" class=\"absolute text-sm dark:text-gray-400 duration-300 transform -translate-y-4 scale-75 top-2 z-10 origin-[0] bg-white dark:bg-gray-900 px-2 peer-focus:px-2  peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:top-1/2 peer-focus:top-2 peer-focus:scale-75 peer-focus:-translate-y-4 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto start-1\">-->\r\n<!--              {{val.name}}-->\r\n<!--            </label>-->\r\n<!--          </div>-->\r\n\r\n          <Input\r\n            :formName=\"form_name\"\r\n            :label=\"val.name\"\r\n            :type=\"val.lable\"\r\n            :disabled=\"val.disabled\"\r\n            @update=\"val.value = $event\"\r\n          />\r\n        </template>\r\n        <template v-if=\"val.type=='dropdown'\">\r\n            <Dropdown :formName=\"form_name\">\r\n              <template v-slot:btnName>\r\n                {{val.name}}\r\n              </template>\r\n              <template v-slot:list>\r\n                <li v-for=\"(data, index) in val.data\" :key=\"index\">\r\n                  <a @click=\"clicked(form_name, data)\" type=\"button\" class=\"block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\">\r\n                    {{ data }}\r\n                  </a>\r\n                </li>\r\n              </template>\r\n            </Dropdown>\r\n          </template>\r\n      </template>\r\n      <modal type=\"confirm\">\r\n        <template v-slot:button>اضافه کردن</template>\r\n        <template v-slot:text>\r\n          <div class=\"flex flex-col gap-2 font-bold\">\r\n            <template v-for=\"(val, key) in forms\">\r\n                <p v-if=\"key=='reel_numbers'\">شماره رول:</p>\r\n                <ul v-if=\"key=='reel_numbers'\">\r\n                  <li v-for=\"item in val.value\" :key=\"item\">{{ item }}</li>\r\n                </ul>\r\n                <p v-else>{{val.title}}: {{val.value}}</p>\r\n            </template>\r\n          </div>\r\n        </template>\r\n        <template v-slot:btns>\r\n          <div>\r\n            <ModalButton @close=\"weight1\" />\r\n          </div>\r\n        </template>\r\n      </modal>\r\n    </form>\r\n</template>"],"mappings":";AACA,SAAQA,YAAY,QAAO,UAAU;AACrC,OAAOC,KAAI,MAAO,wBAAwB;AAC1C,OAAOC,KAAI,MAAO,wBAAwB;AAC1C,OAAOC,IAAG,MAAO,uBAAuB;AACxC,OAAOC,QAAO,MAAO,kCAAkC;AACvD,OAAOC,WAAU,MAAO,qCAAqC;AAC7D,OAAOC,KAAI,MAAO,+BAA+B;AAEjD,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,UAAU,EAAE;IAACF,KAAK;IAAED,WAAW;IAAED,QAAQ;IAAED,IAAI;IAAED,KAAK;IAAED;EAAK,CAAC;EAC9DQ,IAAIA,CAAA,EAAE;IACJ,OAAO;MACLC,KAAK,EAAE;QACLC,UAAU,EAAE;UAACC,IAAI,EAAE,UAAU;UAAEL,IAAI,EAAE,YAAY;UAACM,KAAK,EAAE,YAAY;UAAEJ,IAAI,EAAE,EAAE;UAAEK,KAAK,EAAE;QAAE,CAAC;QAC3FC,OAAO,EAAE;UAACH,IAAI,EAAC,OAAO;UAAEL,IAAI,EAAE,OAAO;UAACM,KAAK,EAAE,OAAO;UAAEC,KAAK,EAAE,EAAE;UAAEE,UAAU,EAAC,IAAI;UAAEC,KAAK,EAAC;QAAQ,CAAC;QACjGC,QAAQ,EAAE;UAACN,IAAI,EAAC,OAAO;UAAEL,IAAI,EAAE,WAAW;UAACM,KAAK,EAAE,WAAW;UAAEC,KAAK,EAAE;QAAE;MAC1E,CAAC;MACDK,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE,KAAK;MACZC,MAAM,EAAE;IACV;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAACC,YAAY,CAAC,IAAI,CAACC,UAAU,CAAC;IAC3C;EACF,CAAC;EACDC,KAAK,EAAC;IACJP,OAAOA,CAACQ,CAAC,EAAEC,CAAC,EAAC;MACX,IAAID,CAAA,IAAK,IAAI,EAAE;QACbE,UAAU,CAAC,MAAM;UACf,IAAI,CAACV,OAAM,GAAI,KAAI;UACnBW,QAAQ,CAACC,MAAM,CAAC,CAAC;QACnB,CAAC,EAAE,IAAI;MACT;IACF;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRhC,YAAY,CAAC,CAAC;IACd,MAAMiC,MAAK,GAAI;MACb,QAAQ,EAAE,YAAY;MACtB,UAAU,EAAE;IACd;IACA,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC,sCAAsC,EAAE,CAAC,CAAC,EAAE;MAACF,MAAM,EAAEA;IAAM,CAAC,CAAC,CAACG,IAAI,CAAEC,QAAQ,IAAK;MAC/FC,OAAO,CAACC,GAAG,CAAC,OAAO,EAACF,QAAQ,CAAC5B,IAAI;MACjC,IAAI,CAACC,KAAK,CAACC,UAAU,CAACF,IAAG,GAAI4B,QAAQ,CAAC5B,IAAI,CAAC,iBAAiB;IAC9D,CAAC;EACH,CAAC;EACD+B,OAAO,EAAC;IACNhB,YAAYA,CAACV,KAAK,EAAE;MAClB,OAAOA,KAAK,CAAC2B,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC;IACvE,CAAC;IACDC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAAChC,KAAK,CAACK,OAAO,CAACD,KAAI,GAAI,IAAI,CAACU,YAAY,CAAC,IAAI,CAACd,KAAK,CAACK,OAAO,CAACD,KAAK,CAAC;IACxE,CAAC;IACD6B,OAAOA,CAACC,CAAC,EAAErC,IAAI,EAAC;MACd+B,OAAO,CAACC,GAAG,CAACK,CAAC,EAAErC,IAAI;MACnB,IAAIqC,CAAA,IAAK,YAAY,EAAC;QACpB,IAAI,CAAClC,KAAK,CAACC,UAAU,CAACJ,IAAG,GAAIA,IAAG;QAChC,IAAI,CAACG,KAAK,CAACC,UAAU,CAACG,KAAI,GAAIP,IAAG;MACnC;IACF,CAAC;IACD,MAAMQ,OAAOA,CAAA,EAAG;MACd,MAAMkB,MAAK,GAAI;QACb,gBAAgB,EAAE,IAAI,CAACvB,KAAK,CAACC,UAAU,CAACG,KAAK;QAC7C,SAAS,EAAE,IAAI,CAACJ,KAAK,CAACK,OAAO,CAACD,KAAK,CAAC2B,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;QACrD,UAAU,EAAE,IAAI,CAAC/B,KAAK,CAACQ,QAAQ,CAACJ;MAClC,CAAC;MACD,IAAI,CAACO,MAAK,GAAI,EAAC;MACf,KAAK,MAAMwB,GAAE,IAAK,IAAI,CAACnC,KAAK,EAAE;QAC5B,IAAI,IAAI,CAACA,KAAK,CAACmC,GAAG,CAAC,CAAC/B,KAAI,IAAK,EAAE,EAAC;UAC9B,IAAI+B,GAAG,IAAE,SAAS,EAAC;YACjB,IAAI,CAACnC,KAAK,CAACmC,GAAG,CAAC,CAACzB,KAAI,GAAI,IAAG;YAC7B,IAAI,CAACC,MAAM,CAACyB,IAAI,CAAC;cAAC,SAAS,EAAG,GAAE,IAAI,CAACpC,KAAK,CAACmC,GAAG,CAAC,CAACtC,IAAI;YAAgB,CAAC;UACrE;QACF,CAAC,MAAK;UACH,IAAI,CAACG,KAAK,CAACmC,GAAG,CAAC,CAACzB,KAAI,GAAI,KAAI;QAC/B;MACF;MACA,IAAI,IAAI,CAACC,MAAM,CAAC0B,MAAK,IAAK,CAAC,EAAC;QAC1B,IAAI,CAAC3B,KAAI,GAAI,KAAI;QACjB,MAAMiB,QAAO,GAAI,MAAM,IAAI,CAACH,KAAK,CAACC,IAAI,CAAC,uBAAuB,EAAE,CAAC,CAAC,EAAE;UAACF,MAAM,EAAEA;QAAM,CAAC;QACpFK,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC5B,IAAI,CAAC,EAAE;QAC5B,IAAI4B,QAAQ,CAAC5B,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAC;UACvC,IAAI,CAACU,OAAM,GAAI,IAAG;QACpB,CAAC,MAAK;UACJ,IAAI,CAACC,KAAI,GAAI,IAAG;UAChB,IAAI,CAACC,MAAK,GAAIgB,QAAQ,CAAC5B,IAAI,CAAC,QAAQ;QACtC;MACF,OAAO;QACL,IAAI,CAACW,KAAI,GAAI,IAAG;MAClB;IAEF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}