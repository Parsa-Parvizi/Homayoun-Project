{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container relative w-screen p-5\"\n};\nconst _hoisted_2 = {\n  class: \"fixed top-0 right-0 left-0 z-10 flex w-full flex-col\"\n};\nconst _hoisted_3 = {\n  class: \"flex flex-row items-center gap-2\"\n};\nconst _hoisted_4 = {\n  class: \"mt-5 flex flex-col items-center gap-4\"\n};\nconst _hoisted_5 = {\n  class: \"relative h-auto w-full overflow-x-auto overflow-y-scroll shadow-md max-h-[500px] sm:rounded-lg\"\n};\nconst _hoisted_6 = [\"id\"];\nconst _hoisted_7 = {\n  class: \"bg-white p-5 text-left rtl:text-right text-lg font-semibold text-gray-900 dark:bg-gray-800 dark:text-white\"\n};\nconst _hoisted_8 = {\n  class: \"flex flex-row items-center gap-2\"\n};\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = [\"id\", \"data-dropdown-toggle\"];\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  class: \"w-2.5 h-2.5 ms-3\",\n  \"aria-hidden\": \"true\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  fill: \"none\",\n  viewBox: \"0 0 10 6\"\n}, [/*#__PURE__*/_createElementVNode(\"path\", {\n  stroke: \"currentColor\",\n  \"stroke-linecap\": \"round\",\n  \"stroke-linejoin\": \"round\",\n  \"stroke-width\": \"2\",\n  d: \"m1 1 4 4 4-4\"\n})], -1 /* HOISTED */);\nconst _hoisted_13 = [\"id\"];\nconst _hoisted_14 = [\"aria-labelledby\"];\nconst _hoisted_15 = [\"onClick\"];\nconst _hoisted_16 = [\"onUpdate:modelValue\", \"onInput\"];\nconst _hoisted_17 = {\n  class: \"bg-green-500 text-xs uppercase text-gray-100 dark:bg-gray-700 dark:text-gray-400\"\n};\nconst _hoisted_18 = [\"onClick\"];\nconst _hoisted_19 = {\n  class: \"truncate border-b bg-white hover:bg-green-50 dark:border-gray-700 dark:bg-gray-800 dark:hover:bg-gray-600\"\n};\nconst _hoisted_20 = {\n  key: 0,\n  class: \"w-4 p-4\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Alert = _resolveComponent(\"Alert\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\"<Card title=\\\"گزارش\\\">\"), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" The div that should appear in front of all others \"), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.alerts, (alert, index) => {\n    return _openBlock(), _createBlock(_component_Alert, {\n      key: index,\n      msg: alert.message\n    }, null, 8 /* PROPS */, [\"msg\"]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"p\", _hoisted_3, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.reload && $options.reload(...args)),\n    class: \"block w-auto rounded-lg bg-green-500 px-5 text-center text-sm font-medium text-white py-2.5 hover:bg-green-600 focus:outline-none focus:ring-4 focus:ring-green-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\",\n    type: \"button\"\n  }, \" بارگیری مجدد \"), _createTextVNode(\" \" + _toDisplayString($options.formattedTime), 1 /* TEXT */)]), _createElementVNode(\"form\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.forms, (val, tableName) => {\n    return _openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"table\", {\n      id: tableName,\n      class: \"w-full text-left rtl:text-right text-sm text-gray-500 dark:text-gray-400\"\n    }, [_createElementVNode(\"caption\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [tableName == 'products' ? (_openBlock(), _createBlock(_component_router_link, {\n      key: 0,\n      to: \"/myapp/ProductsPage/\",\n      type: \"button\",\n      class: \"font-medium text-blue-600 hover:underline dark:text-blue-500\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(val.title), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */)) : (_openBlock(), _createElementBlock(_Fragment, {\n      key: 1\n    }, [_createTextVNode(_toDisplayString(val.title), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)), _createElementVNode(\"button\", {\n      onClick: $event => $options.printTable(tableName),\n      class: \"block w-auto rounded-lg bg-green-500 px-5 text-center text-sm font-medium text-white py-2.5 hover:bg-green-600 focus:outline-none focus:ring-4 focus:ring-green-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\",\n      type: \"button\"\n    }, \" PDF \", 8 /* PROPS */, _hoisted_9), _createElementVNode(\"button\", {\n      onClick: $event => $options.generate_excel_report(tableName),\n      class: \"block w-auto rounded-lg bg-green-500 px-5 text-center text-sm font-medium text-white py-2.5 hover:bg-green-600 focus:outline-none focus:ring-4 focus:ring-green-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\",\n      type: \"button\"\n    }, \" XLS \", 8 /* PROPS */, _hoisted_10), _createElementVNode(\"button\", {\n      id: tableName + 'Button1',\n      \"data-dropdown-toggle\": tableName + 'dropdown1',\n      class: \"inline-flex w-44 items-center justify-between rounded-lg bg-green-500 px-5 text-center text-sm font-medium text-white py-2.5 hover:bg-green-600 focus:outline-none focus:ring-4 focus:ring-green-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\",\n      type: \"button\"\n    }, [_createTextVNode(_toDisplayString(val.filter) + \" \", 1 /* TEXT */), _hoisted_12], 8 /* PROPS */, _hoisted_11), _createCommentVNode(\" Dropdown menu \"), _createElementVNode(\"div\", {\n      id: tableName + 'dropdown1',\n      class: \"z-50 hidden w-44 rounded-lg bg-white shadow divide-y divide-gray-100 dark:bg-gray-700\"\n    }, [_createElementVNode(\"ul\", {\n      class: \"h-auto max-h-48 overflow-y-auto py-2 text-sm text-gray-700 dark:text-gray-200\",\n      \"aria-labelledby\": tableName + 'Button1'\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.filters, data => {\n      return _openBlock(), _createElementBlock(\"li\", null, [_createElementVNode(\"a\", {\n        onClick: $event => $options.clicked(tableName, data),\n        type: \"button\",\n        class: \"block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\"\n      }, _toDisplayString(data.lable), 9 /* TEXT, PROPS */, _hoisted_15)]);\n    }), 256 /* UNKEYED_FRAGMENT */))], 8 /* PROPS */, _hoisted_14)], 8 /* PROPS */, _hoisted_13), _withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      \"onUpdate:modelValue\": $event => $data.forms[tableName].searchQuery = $event,\n      onInput: $event => $options.filterTable(tableName),\n      class: \"block rounded-lg border border-gray-300 bg-gray-50 p-2 pl-10 text-sm text-gray-900 w-md focus:ring-primary-500 focus:border-primary-500 dark:placeholder-gray-400 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500\",\n      placeholder: \"Search\",\n      required: \"\"\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_16), [[_vModelText, $data.forms[tableName].searchQuery]])])]), _createElementVNode(\"thead\", _hoisted_17, [_createElementVNode(\"tr\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(val.fields, (column, k) => {\n      return _openBlock(), _createElementBlock(_Fragment, null, [column != 'id' ? (_openBlock(), _createElementBlock(\"th\", {\n        key: 0,\n        scope: \"col\",\n        class: \"px-2 py-3\",\n        onClick: $event => $options.sortTable(tableName, column)\n      }, _toDisplayString(column), 9 /* TEXT, PROPS */, _hoisted_18)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n    }), 256 /* UNKEYED_FRAGMENT */))])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(val.data, (v, index) => {\n      return _openBlock(), _createElementBlock(\"tr\", _hoisted_19, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(val.fields, (field, k) => {\n        return _openBlock(), _createElementBlock(_Fragment, null, [field != 'id' ? (_openBlock(), _createElementBlock(\"td\", _hoisted_20, _toDisplayString(v[field]), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n      }), 256 /* UNKEYED_FRAGMENT */))]);\n    }), 256 /* UNKEYED_FRAGMENT */))])], 8 /* PROPS */, _hoisted_6)]);\n  }), 256 /* UNKEYED_FRAGMENT */))])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","xmlns","fill","viewBox","stroke","d","key","_createElementBlock","_Fragment","_createCommentVNode","_hoisted_1","_hoisted_2","_renderList","$data","alerts","alert","index","_createBlock","_component_Alert","msg","message","_hoisted_3","onClick","_cache","args","$options","reload","type","_createTextVNode","_toDisplayString","formattedTime","_hoisted_4","forms","val","tableName","_hoisted_5","id","_hoisted_7","_hoisted_8","_component_router_link","to","default","_withCtx","title","_","$event","printTable","_hoisted_9","generate_excel_report","_hoisted_10","filter","_hoisted_12","_hoisted_11","filters","data","clicked","lable","_hoisted_15","_hoisted_14","_hoisted_13","searchQuery","onInput","filterTable","placeholder","required","_hoisted_16","_hoisted_17","fields","column","k","scope","sortTable","_hoisted_18","v","_hoisted_19","field","_hoisted_20","_hoisted_6"],"sources":["C:\\Users\\Amir\\ISMv988\\ISMv900\\frontend\\src\\components\\admin\\reportPage.vue"],"sourcesContent":["<script>\r\nimport {initFlowbite} from 'flowbite'\r\nimport Card from '@/components/Card'\r\nimport modal from \"@/components/Modal.vue\";\r\nimport Alert from \"@/components/Alert.vue\";\r\nimport Lic_numer from \"@/components/lic_numer.vue\";\r\nimport {jsPDF} from \"jspdf\";\r\nimport html2canvas from 'html2canvas';\r\n\r\nexport default {\r\n  name: \"reportPage\",\r\n  components: {\r\n    Lic_numer,\r\n    Card,\r\n    modal,\r\n    Alert\r\n  },\r\n  data() {\r\n    return {\r\n      forms: {\r\n        shipments: {\r\n          type: 'input',\r\n          title: 'لیست بارنامه',\r\n          filter: 'فیلتر',\r\n          data: '',\r\n          value: '',\r\n          fields: [],\r\n          CopyData: [],\r\n          searchQuery: ''\r\n        },\r\n        sales: {\r\n          type: 'input',\r\n          title: 'لیست فروش',\r\n          filter: 'فیلتر',\r\n          data: '',\r\n          value: '',\r\n          fields: [],\r\n          CopyData: [],\r\n          searchQuery: ''\r\n        },\r\n        purchases: {\r\n          type: 'input',\r\n          title: 'لیست خرید',\r\n          filter: 'فیلتر',\r\n          data: '',\r\n          value: '',\r\n          fields: [],\r\n          CopyData: [],\r\n          searchQuery: ''\r\n        },\r\n        rawMaterial: {\r\n          type: 'input',\r\n          title: 'لیست مواد اولیه',\r\n          filter: 'فیلتر',\r\n          data: '',\r\n          value: '',\r\n          fields: [],\r\n          CopyData: [],\r\n          searchQuery: ''\r\n        },\r\n        products: {\r\n          type: 'input',\r\n          title: 'لیست محصولات',\r\n          filter: 'فیلتر',\r\n          data: '',\r\n          value: '',\r\n          fields: [],\r\n          CopyData: [],\r\n          searchQuery: ''\r\n        },\r\n        consumption: {\r\n          type: 'input',\r\n          title: 'لیست مصرف',\r\n          filter: 'فیلتر',\r\n          data: '',\r\n          value: '',\r\n          fields: [],\r\n          CopyData: [],\r\n          searchQuery: ''\r\n        },\r\n        alerts: {\r\n          type: 'input',\r\n          title: 'هشدار ها',\r\n          filter: 'فیلتر',\r\n          data: [],\r\n          value: '',\r\n          fields: ['date', 'status', 'message'],\r\n          CopyData: [],\r\n          searchQuery: ''\r\n        },\r\n      },\r\n      filters: [\r\n        {lable: 'یک سال اخیر', value: 'year'},\r\n        {lable: 'یک ماه اخیر', value: 'month'},\r\n        {lable: 'هفته اخیر', value: 'week'},\r\n        {lable: 'امروز', value: 'day'},\r\n      ],\r\n      success: false,\r\n      error: false,\r\n      errors: [],\r\n\r\n      // Initialize the countdown to 15 minutes (15 * 60 seconds)\r\n      totalSeconds: 5 * 60,\r\n      alerts: [], // Reactive property to store messages\r\n      alertSocket: null, // WebSocket connection\r\n      searchQuery: '',\r\n    }\r\n  },\r\n  computed: {\r\n    // Format the time for display\r\n    formattedTime() {\r\n      const minutes = Math.floor(this.totalSeconds / 60);\r\n      const seconds = this.totalSeconds % 60;\r\n      return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n    }\r\n  },\r\n  mounted() {\r\n    initFlowbite();\r\n    // this.load_data()\r\n    this.startCountdown();\r\n    this.report_shipment('year')\r\n    this.report_Products('year')\r\n    this.report_Sales('year')\r\n    this.report_Purchases('year')\r\n    this.report_Consumption('year')\r\n    this.report_RawMaterial('year')\r\n    this.report_alerts('year')\r\n    // Initialize WebSocket connection\r\n    this.alertSocket = new WebSocket('ws://' + window.location.host + '/ws/alert/');\r\n\r\n    // Set up message handler\r\n    this.alertSocket.onmessage = (e) => {\r\n      const data = JSON.parse(e.data);\r\n      console.log(this.forms.alerts.data);\r\n      console.log(data.data);\r\n      this.alerts.push({message: data.message});\r\n      this.update_alert(data.data)\r\n    };\r\n\r\n    // Handle WebSocket errors\r\n    this.alertSocket.onerror = (error) => {\r\n      console.error('WebSocket Error: ', error);\r\n    };\r\n\r\n  },\r\n  beforeDestroy() {\r\n    // Close WebSocket connection when component is destroyed\r\n    if (this.alertSocket) {\r\n      this.alertSocket.close();\r\n    }\r\n  },\r\n  methods: {\r\n    update_alert(d) {\r\n      this.forms.alerts.data.unshift(d);\r\n    },\r\n    async generate_excel_report(model_name) {\r\n      console.log(model_name)\r\n      const params = {\r\n        'model_name': model_name,\r\n      }\r\n      const response = await this.axios.post('/myapp/api/generateExcelReport', {}, {\r\n        params: params,\r\n        responseType: 'blob',\r\n      },)\r\n      // Create a URL for the blob\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n\r\n      // Suggest a filename for the downloaded file\r\n      const filename = response.headers['content-disposition'];\r\n      link.setAttribute('download', filename);\r\n\r\n      // Append the link to the body\r\n      document.body.appendChild(link);\r\n\r\n      // Simulate click to download the file\r\n      link.click();\r\n\r\n      // Remove the link from the body\r\n      document.body.removeChild(link);\r\n\r\n      console.log(response.data)\r\n    },\r\n    reload() {\r\n      window.location.reload();\r\n    },\r\n    countdown() {\r\n      if (this.totalSeconds > 0) {\r\n        // Decrement the total seconds by one\r\n        this.totalSeconds -= 1;\r\n      } else {\r\n        // If the countdown has finished, refresh the page\r\n        window.location.reload();\r\n      }\r\n    },\r\n    startCountdown() {\r\n      // Call the countdown function every second\r\n      this.interval = setInterval(this.countdown, 1000);\r\n    },\r\n    select(obj) {\r\n      this.forms.shipment_list.value = obj\r\n    },\r\n    clicked(k, data) {\r\n      if (k == 'shipments') {\r\n        this.forms.shipments.filter = data.lable\r\n        this.report_shipment(data.value)\r\n      }\r\n      if (k == 'sales') {\r\n        this.forms.sales.filter = data.lable\r\n        this.report_Sales(data.value)\r\n      }\r\n      if (k == 'purchases') {\r\n        this.forms.purchases.filter = data.lable\r\n        this.report_Purchases(data.value)\r\n      }\r\n      if (k == 'rawMaterial') {\r\n        this.forms.rawMaterial.filter = data.lable\r\n        this.report_RawMaterial(data.value)\r\n      }\r\n      if (k == 'products') {\r\n        this.forms.products.filter = data.lable\r\n        this.report_Products(data.value)\r\n      }\r\n      if (k == 'consumption') {\r\n        this.forms.consumption.filter = data.lable\r\n        this.report_Consumption(data.value)\r\n      }\r\n      if (k == 'alerts') {\r\n        this.forms.alerts.filter = data.lable\r\n        this.report_alerts(data.value)\r\n      }\r\n    },\r\n    async load_data() {\r\n      const response = await this.axios.get('/myapp/api/loadReportData')\r\n      console.log(response.data['data']); // Access response data\r\n      // console.log(JSON.parse(response.data['isExists'])); // Access response data\r\n      this.forms = response.data['data']\r\n      // this.forms.shipment_list.data = response.data['data'].shipments.values\r\n      // this.forms.shipment_list.fields = response.data['data'].shipments.fields\r\n      // console.log(JSON.parse(response.data['shipment_list']))\r\n    },\r\n    printTable(id) {\r\n      let table = document.getElementById(id); // Replace 'yourTableId' with your table's ID\r\n      console.log(table)\r\n      html2canvas(table).then(function (canvas) {\r\n        let imgData = canvas.toDataURL('image/png');\r\n        console.log(imgData)\r\n        var doc = new jsPDF('p', 'mm', 'a4');\r\n        var imgHeight = canvas.height * 210 / canvas.width;\r\n        doc.addImage(imgData, 'PNG', 0, 0, 210, imgHeight);\r\n        doc.save('table.pdf');\r\n      });\r\n    },\r\n    async report_Sales(filter) {\r\n      try {\r\n        const params = {\r\n          'filter': filter,\r\n        }\r\n        const response = await this.axios.post('/myapp/api/reportSales', {}, {params: params})\r\n        console.log(response.data);\r\n        this.forms['sales'].data = response.data['values']\r\n        this.forms['sales'].CopyData = response.data['values']\r\n        this.forms['sales'].fields = response.data['fields']\r\n      } catch (error) {\r\n        console.error(\"Error fetching sales report:\", error);\r\n        this.forms['sales'].data = []\r\n        this.forms['sales'].CopyData = []\r\n        // Optionally, display an error message to the user\r\n        // this.errorMessage = \"Failed to fetch sales report. Please try again.\";\r\n      }\r\n    },\r\n\r\n    async report_Purchases(filter) {\r\n      try {\r\n        const params = {\r\n          'filter': filter,\r\n        }\r\n        const response = await this.axios.post('/myapp/api/reportPurchases', {}, {params: params})\r\n        console.log(response.data);\r\n        this.forms['purchases'].data = response.data['values']\r\n        this.forms['purchases'].CopyData = response.data['values']\r\n        this.forms['purchases'].fields = response.data['fields']\r\n      } catch (error) {\r\n        console.error(\"Error fetching purchases report:\", error);\r\n        this.forms['purchases'].data = []\r\n        this.forms['purchases'].CopyData = []\r\n        // Optionally, display an error message to the user\r\n        // this.errorMessage = \"Failed to fetch purchases report. Please try again.\";\r\n      }\r\n    },\r\n\r\n    async report_RawMaterial(filter) {\r\n      try {\r\n        const params = {\r\n          'filter': filter,\r\n        }\r\n        const response = await this.axios.post('/myapp/api/reportRawMaterial', {}, {params: params})\r\n        console.log(response.data);\r\n        this.forms['rawMaterial'].data = response.data['values']\r\n        this.forms['rawMaterial'].CopyData = response.data['values']\r\n        this.forms['rawMaterial'].fields = response.data['fields']\r\n      } catch (error) {\r\n        console.error(\"Error fetching raw material report:\", error);\r\n        this.forms['rawMaterial'].data = []\r\n        this.forms['rawMaterial'].CopyData = []\r\n        // Optionally, display an error message to the user\r\n        // this.errorMessage = \"Failed to fetch raw material report. Please try again.\";\r\n      }\r\n    },\r\n\r\n    async report_Products(filter) {\r\n      try {\r\n        const params = {\r\n          'filter': filter,\r\n        }\r\n        const response = await this.axios.post('/myapp/api/reportProducts', {}, {params: params})\r\n        console.log(response.data);\r\n        this.forms['products'].data = response.data['values']\r\n        this.forms['products'].CopyData = response.data['values']\r\n        this.forms['products'].fields = response.data['fields']\r\n      } catch (error) {\r\n        console.error(\"Error fetching products report:\", error);\r\n        this.forms['products'].data = []\r\n        this.forms['products'].CopyData = []\r\n        // Optionally, display an error message to the user\r\n        // this.errorMessage = \"Failed to fetch products report. Please try again.\";\r\n      }\r\n    },\r\n\r\n    async report_Consumption(filter) {\r\n      try {\r\n        const params = {\r\n          'filter': filter,\r\n        }\r\n        const response = await this.axios.post('/myapp/api/reportConsumption', {}, {params: params})\r\n        this.forms['consumption'].data = response.data['values']\r\n        this.forms['consumption'].CopyData = response.data['values']\r\n        this.forms['consumption'].fields = response.data['fields']\r\n      } catch (error) {\r\n        console.error(\"Error fetching consumption report:\", error);\r\n        this.forms['consumption'].data = []\r\n        this.forms['consumption'].CopyData = []\r\n        // Optionally, display an error message to the user\r\n        // this.errorMessage = \"Failed to fetch consumption report. Please try again.\";\r\n      }\r\n    },\r\n\r\n    async report_shipment(filter) {\r\n      try {\r\n        const params = {\r\n          'filter': filter,\r\n        }\r\n        const response = await this.axios.post('/myapp/api/reportShipment', {}, {params: params})\r\n\r\n        this.forms['shipments'].data = response.data['values']\r\n        this.forms['shipments'].CopyData = response.data['values']\r\n        this.forms['shipments'].fields = response.data['fields']\r\n\r\n      } catch (error) {\r\n        console.error(\"Error fetching shipment report:\", error);\r\n        this.forms['shipments'].data = []\r\n        this.forms['shipments'].CopyData = []\r\n        // Optionally, display an error message to the user\r\n        // this.errorMessage = \"Failed to fetch shipment report. Please try again.\";\r\n      }\r\n    },\r\n\r\n    async report_alerts(filter) {\r\n      try {\r\n        const params = {\r\n          'filter': filter,\r\n        }\r\n        const response = await this.axios.post('/myapp/api/reportAlert', {}, {params: params})\r\n        console.log(response.data);\r\n        this.forms['alerts'].data = response.data['values']\r\n        this.forms['alerts'].CopyData = response.data['values']\r\n        this.forms['alerts'].fields = response.data['fields']\r\n        console.log(this.forms.alerts)\r\n      } catch (error) {\r\n        console.error(\"Error fetching alerts report:\", error);\r\n\r\n        this.forms['alerts'].data = []\r\n        this.forms['alerts'].CopyData = []\r\n      }\r\n    },\r\n\r\n    sortTable(tableName, column) {\r\n      this.forms[tableName].data.sort((a, b) => {\r\n        // Check if the column data is a number\r\n        if (!isNaN(a[column]) && !isNaN(b[column])) {\r\n          return a[column] - b[column];\r\n        }\r\n        // Check if the column data is a string\r\n        if (typeof a[column] === 'string' && typeof b[column] === 'string') {\r\n          // Convert both strings to lowercase for case-insensitive comparison\r\n          const aLower = a[column].toLowerCase();\r\n          const bLower = b[column].toLowerCase();\r\n          if (aLower < bLower) {\r\n            return -1;\r\n          }\r\n          if (aLower > bLower) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        }\r\n        // If the data is neither a number nor a string, sort alphabetically\r\n        if (a[column] < b[column]) {\r\n          return -1;\r\n        }\r\n        if (a[column] > b[column]) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    },\r\n\r\n    reverseTable(tableName, column) {\r\n      // Reverse the order of the data in the specified column using.reverse()\r\n      this.forms[tableName].data = this.forms[tableName].data.map(row => {\r\n        const reversedRow = {};\r\n        for (const key in row) {\r\n          reversedRow[key] = row[key];\r\n        }\r\n        reversedRow[column] = row[column].reverse();\r\n        return reversedRow;\r\n      });\r\n    },\r\n\r\n    filterTable(tableName) {\r\n      if (this.forms[tableName].searchQuery) {\r\n        // this.forms[tableName].CopyData = this.forms[tableName].data\r\n        this.forms[tableName].data = this.forms[tableName].data.filter(item => {\r\n          return Object.values(item).some(value =>\r\n              value !== null && value !== undefined &&\r\n              value.toString().toLowerCase().includes(this.forms[tableName].searchQuery.toLowerCase())\r\n          );\r\n        });\r\n      } else {\r\n        this.forms[tableName].data = this.forms[tableName].CopyData\r\n      }\r\n    }\r\n\r\n  },\r\n}\r\n</script>\r\n\r\n<template>\r\n  <!--<Card title=\"گزارش\">-->\r\n  <div class=\"container relative w-screen p-5\">\r\n    <!-- The div that should appear in front of all others -->\r\n    <div class=\"fixed top-0 right-0 left-0 z-10 flex w-full flex-col\">\r\n      <template v-for=\"(alert, index) in alerts\" :key=\"index\">\r\n        <Alert :msg=\"alert.message\"></Alert>\r\n      </template>\r\n    </div>\r\n    <p class=\"flex flex-row items-center gap-2\">\r\n      <button @click=\"reload\"\r\n              class=\"block w-auto rounded-lg bg-green-500 px-5 text-center text-sm font-medium text-white py-2.5 hover:bg-green-600 focus:outline-none focus:ring-4 focus:ring-green-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n              type=\"button\">\r\n        بارگیری مجدد\r\n      </button>\r\n      {{ formattedTime }}\r\n    </p>\r\n    <form class=\"mt-5 flex flex-col items-center gap-4\">\r\n      <template v-for=\"(val, tableName) in forms\">\r\n        <div class=\"relative h-auto w-full overflow-x-auto overflow-y-scroll shadow-md max-h-[500px] sm:rounded-lg\">\r\n          <table :id=\"tableName\" class=\"w-full text-left rtl:text-right text-sm text-gray-500 dark:text-gray-400\">\r\n            <caption\r\n                class=\"bg-white p-5 text-left rtl:text-right text-lg font-semibold text-gray-900 dark:bg-gray-800 dark:text-white\">\r\n\r\n              <div class=\"flex flex-row items-center gap-2\">\r\n                <template v-if=\"tableName == 'products'\">\r\n                  <router-link\r\n                      to=\"/myapp/ProductsPage/\"\r\n                      type=\"button\"\r\n                      class=\"font-medium text-blue-600 hover:underline dark:text-blue-500\"\r\n                  >\r\n                    {{ val.title }}\r\n                  </router-link>\r\n                </template>\r\n                <template v-else>\r\n                  {{ val.title }}\r\n                </template>\r\n                <button @click=\"printTable(tableName)\"\r\n                        class=\"block w-auto rounded-lg bg-green-500 px-5 text-center text-sm font-medium text-white py-2.5 hover:bg-green-600 focus:outline-none focus:ring-4 focus:ring-green-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n                        type=\"button\">\r\n                  PDF\r\n                </button>\r\n                <button @click=\"generate_excel_report(tableName)\"\r\n                        class=\"block w-auto rounded-lg bg-green-500 px-5 text-center text-sm font-medium text-white py-2.5 hover:bg-green-600 focus:outline-none focus:ring-4 focus:ring-green-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n                        type=\"button\">\r\n                  XLS\r\n                </button>\r\n\r\n                <button :id=\"tableName + 'Button1'\" :data-dropdown-toggle=\"tableName+'dropdown1'\"\r\n                        class=\"inline-flex w-44 items-center justify-between rounded-lg bg-green-500 px-5 text-center text-sm font-medium text-white py-2.5 hover:bg-green-600 focus:outline-none focus:ring-4 focus:ring-green-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n                        type=\"button\">\r\n                  {{ val.filter }}\r\n                  <svg class=\"w-2.5 h-2.5 ms-3\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\"\r\n                       viewBox=\"0 0 10 6\">\r\n                    <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                          d=\"m1 1 4 4 4-4\"/>\r\n                  </svg>\r\n                </button>\r\n                <!-- Dropdown menu -->\r\n                <div :id=\"tableName+'dropdown1'\"\r\n                     class=\"z-50 hidden w-44 rounded-lg bg-white shadow divide-y divide-gray-100 dark:bg-gray-700\">\r\n                  <ul class=\"h-auto max-h-48 overflow-y-auto py-2 text-sm text-gray-700 dark:text-gray-200\"\r\n                      :aria-labelledby=\"tableName + 'Button1'\">\r\n                    <li v-for=\"data in filters\">\r\n                      <a @click='clicked(tableName ,data)' type=\"button\"\r\n                         class=\"block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\">\r\n                        {{ data.lable }}\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <input type=\"text\" v-model=\"forms[tableName].searchQuery\" @input=\"filterTable(tableName)\"\r\n                       class=\"block rounded-lg border border-gray-300 bg-gray-50 p-2 pl-10 text-sm text-gray-900 w-md focus:ring-primary-500 focus:border-primary-500 dark:placeholder-gray-400 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500\"\r\n                       placeholder=\"Search\" required=\"\">\r\n              </div>\r\n\r\n            </caption>\r\n            <thead class=\"bg-green-500 text-xs uppercase text-gray-100 dark:bg-gray-700 dark:text-gray-400\">\r\n            <tr>\r\n              <template v-for=\"(column ,k) in val.fields\">\r\n                <template v-if=\"column !='id'\">\r\n                  <th scope=\"col\" class=\"px-2 py-3\" @click=\"sortTable(tableName, column)\">\r\n                    {{ column }}\r\n                  </th>\r\n                </template>\r\n              </template>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <template v-for=\"(v, index) in val.data\">\r\n              <tr class=\"truncate border-b bg-white hover:bg-green-50 dark:border-gray-700 dark:bg-gray-800 dark:hover:bg-gray-600\">\r\n                <template v-for=\"(field ,k) in val.fields\">\r\n                  <template v-if=\"field !='id'\">\r\n                    <td class=\"w-4 p-4\">\r\n                      {{ v[field] }}\r\n                    </td>\r\n                  </template>\r\n                </template>\r\n              </tr>\r\n            </template>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </template>\r\n    </form>\r\n  </div>\r\n\r\n</template>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}