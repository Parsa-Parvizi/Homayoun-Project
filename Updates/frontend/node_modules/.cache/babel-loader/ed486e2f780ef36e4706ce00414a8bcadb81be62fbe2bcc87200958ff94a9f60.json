{"ast":null,"code":"import { vModelText as _vModelText, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = [\"id\", \"disabled\"];\nconst _hoisted_2 = [\"for\"];\nconst _hoisted_3 = {\n  key: 0,\n  class: \"mt-2 text-xs text-red-600 dark:text-red-400\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"relative\", [$props.hidden ? 'hidden' : '']])\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.inputValue = $event),\n    onInput: _cache[1] || (_cache[1] = $event => $options.updateValue($event.target.value)),\n    type: \"text\",\n    id: $props.formName,\n    disabled: $props.disabled,\n    class: _normalizeClass([[$data.error ? 'text-red-900 border-red-500 focus:border-red-500' : 'text-gray-900 focus:border-green-500 border-gray-300'], \"block px-2.5 pb-2.5 pt-4 w-full text-sm bg-transparent rounded-lg border-1 appearance-none focus:outline-none focus:ring-0 peer\"]),\n    placeholder: \"\"\n  }, null, 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_1), [[_vModelText, $data.inputValue]]), _createElementVNode(\"label\", {\n    for: $props.formName,\n    class: _normalizeClass([[$data.error ? 'peer-focus:text-red-500 text-red-500' : 'peer-focus:text-green-500 text-gray-500'], \"absolute text-sm dark:text-gray-400 duration-300 transform -translate-y-4 scale-75 top-2 z-10 origin-[0] bg-white dark:bg-gray-900 px-2 peer-focus:px-2 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:top-1/2 peer-focus:top-2 peer-focus:scale-75 peer-focus:-translate-y-4 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto start-1\"])\n  }, _toDisplayString($props.label), 11 /* TEXT, CLASS, PROPS */, _hoisted_2), $data.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, _toDisplayString($data.message), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_normalizeClass","$props","hidden","_createElementVNode","_cache","$event","$data","inputValue","onInput","$options","updateValue","target","value","type","id","formName","disabled","error","placeholder","_hoisted_1","for","label","_hoisted_2","_hoisted_3","_toDisplayString","message","_createCommentVNode"],"sources":["C:\\Users\\Amir\\ISMv988\\ISMv900\\frontend\\src\\components\\custom\\Input.vue"],"sourcesContent":["<script>\r\nexport default {\r\n  name: \"Input\",\r\n  props: {\r\n    formName: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    label: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    value: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: 'text',\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    hidden:{\r\n      type: Boolean,\r\n      default: false,\r\n   },\r\n  },\r\n  data(){\r\n    return {\r\n      error: false,\r\n      message: '',\r\n      inputValue: this.value\r\n    }\r\n  },\r\n  methods: {\r\n    formatNumber(value) {\r\n      return value.replace(/\\D/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    },\r\n    updateValue(newValue) {\r\n      // if (this.type == 'text'){\r\n      //   let pattern = /^[\\u0600-\\u06FF\\s]*$/\r\n      //   if (pattern.test(newValue) == false){\r\n      //     this.error = true;\r\n      //     this.message = 'لطفا از حروف فارسی استفاده کنید.'\r\n      //   } else {\r\n      //     this.error = false\r\n      //     this.message = ''\r\n      //   }\r\n      // }\r\n      if (this.type == 'number'){\r\n        if (!Number.isInteger(parseInt(newValue))){\r\n          this.error = true;\r\n          this.message = 'لطفا فقط از اعداد استفاده کنید.'\r\n        } else {\r\n          this.error = false\r\n          this.message = ''\r\n        }\r\n        newValue = this.formatNumber(newValue)\r\n        this.inputValue = newValue\r\n      }\r\n      // if (this.type == 'phone'){\r\n      //   let pattern =  /^((0?9)|(\\+?989))\\d{9}$/g\r\n      //\r\n      //   if (pattern.test(newValue) == false){\r\n      //     this.error = true;\r\n      //     this.message = 'فرمت شماره وارد شده صحیح نیست'\r\n      //   } else {\r\n      //     this.error = false\r\n      //     this.message = ''\r\n      //   }\r\n      // }\r\n      // if (this.type == 'comment'){\r\n      //   let pattern =  /^(?!.*,)[\\u0600-\\u06FF\\s]*$/;\r\n      //   if (pattern.test(newValue) == false){\r\n      //     this.error = true;\r\n      //     this.message = 'لطفا از حروف فارسی بدون کاما استفاده کنید.'\r\n      //   } else {\r\n      //     this.error = false\r\n      //     this.message = ''\r\n      //   }\r\n      // }\r\n      this.$emit('update', newValue);\r\n      this.$emit('InputError', this.error);\r\n    },\r\n  },\r\n  watch: {\r\n     value(newVal) {\r\n        this.inputValue = newVal;\r\n        // console.log(newVal, this.value, this.inputValue, this.type)\r\n     }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n <div class=\"relative\" :class=\"[hidden ? 'hidden':'']\">\r\n    <input\r\n      v-model=\"inputValue\"\r\n      @input=\"updateValue($event.target.value)\"\r\n      type=\"text\"\r\n      :id=\"formName\"\r\n      :disabled=\"disabled\"\r\n      :class=\"[\r\n        error ? 'text-red-900 border-red-500 focus:border-red-500' : 'text-gray-900 focus:border-green-500 border-gray-300'\r\n      ]\"\r\n      class=\"block px-2.5 pb-2.5 pt-4 w-full text-sm bg-transparent rounded-lg border-1 appearance-none focus:outline-none focus:ring-0 peer\"\r\n      placeholder=\"\"\r\n    />\r\n    <label\r\n      :for=\"formName\"\r\n      :class=\"[\r\n        error ? 'peer-focus:text-red-500 text-red-500' : 'peer-focus:text-green-500 text-gray-500'\r\n      ]\"\r\n      class=\"absolute text-sm dark:text-gray-400 duration-300 transform -translate-y-4 scale-75 top-2 z-10 origin-[0] bg-white dark:bg-gray-900 px-2 peer-focus:px-2 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:top-1/2 peer-focus:top-2 peer-focus:scale-75 peer-focus:-translate-y-4 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto start-1\"\r\n    >\r\n      {{ label }}\r\n    </label>\r\n    <p v-if=\"error\" class=\"mt-2 text-xs text-red-600 dark:text-red-400\">{{message}}</p>\r\n </div>\r\n</template>\r\n"],"mappings":";mBAAA;mBAAA;;EAAAA,GAAA;EAuHoBC,KAAK,EAAC;;;uBAtBzBC,mBAAA,CAuBM;IAvBDD,KAAK,EAjGXE,eAAA,EAiGY,UAAU,GAAUC,MAAA,CAAAC,MAAM;sBAClCC,mBAAA,CAWE;IA7GN,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAmGeC,KAAA,CAAAC,UAAU,GAAAF,MAAA;IAClBG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEI,QAAA,CAAAC,WAAW,CAACL,MAAM,CAACM,MAAM,CAACC,KAAK;IACvCC,IAAI,EAAC,MAAM;IACVC,EAAE,EAAEb,MAAA,CAAAc,QAAQ;IACZC,QAAQ,EAAEf,MAAA,CAAAe,QAAQ;IAClBlB,KAAK,EAxGZE,eAAA,GAwGyBM,KAAA,CAAAW,KAAK,+G,EAGlB,iIAAiI;IACvIC,WAAW,EAAC;kDA5GlBC,UAAA,I,cAmGeb,KAAA,CAAAC,UAAU,E,GAWrBJ,mBAAA,CAQQ;IAPLiB,GAAG,EAAEnB,MAAA,CAAAc,QAAQ;IACbjB,KAAK,EAhHZE,eAAA,GAgHyBM,KAAA,CAAAW,KAAK,sF,EAGlB,8ZAA8Z;sBAEjahB,MAAA,CAAAoB,KAAK,gCArHdC,UAAA,GAuHahB,KAAA,CAAAW,KAAK,I,cAAdlB,mBAAA,CAAmF,KAAnFwB,UAAmF,EAAAC,gBAAA,CAAblB,KAAA,CAAAmB,OAAO,oBAvHjFC,mBAAA,e"},"metadata":{},"sourceType":"module","externalDependencies":[]}